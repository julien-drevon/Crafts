{"ast":null,"code":"import { useMemo, useEffect } from '@storybook/preview-api';\nimport { global } from '@storybook/global';\nimport { dedent } from 'ts-dedent';\nimport { logger } from '@storybook/client-logger';\nvar PARAM_KEY = \"backgrounds\";\nvar {\n    document,\n    window\n  } = global,\n  isReduceMotionEnabled = () => window.matchMedia(\"(prefers-reduced-motion: reduce)\").matches,\n  getBackgroundColorByName = (currentSelectedValue, backgrounds = [], defaultName) => {\n    if (currentSelectedValue === \"transparent\") return \"transparent\";\n    if (backgrounds.find(background => background.value === currentSelectedValue)) return currentSelectedValue;\n    let defaultBackground = backgrounds.find(background => background.name === defaultName);\n    if (defaultBackground) return defaultBackground.value;\n    if (defaultName) {\n      let availableColors = backgrounds.map(background => background.name).join(\", \");\n      logger.warn(dedent`\n        Backgrounds Addon: could not find the default color \"${defaultName}\".\n        These are the available colors for your story based on your configuration:\n        ${availableColors}.\n      `);\n    }\n    return \"transparent\";\n  },\n  clearStyles = selector => {\n    (Array.isArray(selector) ? selector : [selector]).forEach(clearStyle);\n  },\n  clearStyle = selector => {\n    let element = document.getElementById(selector);\n    element && element.parentElement?.removeChild(element);\n  },\n  addGridStyle = (selector, css) => {\n    let existingStyle = document.getElementById(selector);\n    if (existingStyle) existingStyle.innerHTML !== css && (existingStyle.innerHTML = css);else {\n      let style = document.createElement(\"style\");\n      style.setAttribute(\"id\", selector), style.innerHTML = css, document.head.appendChild(style);\n    }\n  },\n  addBackgroundStyle = (selector, css, storyId) => {\n    let existingStyle = document.getElementById(selector);\n    if (existingStyle) existingStyle.innerHTML !== css && (existingStyle.innerHTML = css);else {\n      let style = document.createElement(\"style\");\n      style.setAttribute(\"id\", selector), style.innerHTML = css;\n      let gridStyleSelector = `addon-backgrounds-grid${storyId ? `-docs-${storyId}` : \"\"}`,\n        existingGridStyle = document.getElementById(gridStyleSelector);\n      existingGridStyle ? existingGridStyle.parentElement?.insertBefore(style, existingGridStyle) : document.head.appendChild(style);\n    }\n  };\nvar withBackground = (StoryFn, context) => {\n  let {\n      globals: globals2,\n      parameters: parameters2\n    } = context,\n    globalsBackgroundColor = globals2[PARAM_KEY]?.value,\n    backgroundsConfig = parameters2[PARAM_KEY],\n    selectedBackgroundColor = useMemo(() => backgroundsConfig.disable ? \"transparent\" : getBackgroundColorByName(globalsBackgroundColor, backgroundsConfig.values, backgroundsConfig.default), [backgroundsConfig, globalsBackgroundColor]),\n    isActive = useMemo(() => selectedBackgroundColor && selectedBackgroundColor !== \"transparent\", [selectedBackgroundColor]),\n    selector = context.viewMode === \"docs\" ? `#anchor--${context.id} .docs-story` : \".sb-show-main\",\n    backgroundStyles = useMemo(() => {\n      let transitionStyle = \"transition: background-color 0.3s;\";\n      return `\n      ${selector} {\n        background: ${selectedBackgroundColor} !important;\n        ${isReduceMotionEnabled() ? \"\" : transitionStyle}\n      }\n    `;\n    }, [selectedBackgroundColor, selector]);\n  return useEffect(() => {\n    let selectorId = context.viewMode === \"docs\" ? `addon-backgrounds-docs-${context.id}` : \"addon-backgrounds-color\";\n    if (!isActive) {\n      clearStyles(selectorId);\n      return;\n    }\n    addBackgroundStyle(selectorId, backgroundStyles, context.viewMode === \"docs\" ? context.id : null);\n  }, [isActive, backgroundStyles, context]), StoryFn();\n};\nvar withGrid = (StoryFn, context) => {\n  let {\n      globals: globals2,\n      parameters: parameters2\n    } = context,\n    gridParameters = parameters2[PARAM_KEY].grid,\n    isActive = globals2[PARAM_KEY]?.grid === !0 && gridParameters.disable !== !0,\n    {\n      cellAmount,\n      cellSize,\n      opacity\n    } = gridParameters,\n    isInDocs = context.viewMode === \"docs\",\n    defaultOffset = parameters2.layout === void 0 || parameters2.layout === \"padded\" ? 16 : 0,\n    offsetX = gridParameters.offsetX ?? (isInDocs ? 20 : defaultOffset),\n    offsetY = gridParameters.offsetY ?? (isInDocs ? 20 : defaultOffset),\n    gridStyles = useMemo(() => {\n      let selector = context.viewMode === \"docs\" ? `#anchor--${context.id} .docs-story` : \".sb-show-main\",\n        backgroundSize = [`${cellSize * cellAmount}px ${cellSize * cellAmount}px`, `${cellSize * cellAmount}px ${cellSize * cellAmount}px`, `${cellSize}px ${cellSize}px`, `${cellSize}px ${cellSize}px`].join(\", \");\n      return `\n      ${selector} {\n        background-size: ${backgroundSize} !important;\n        background-position: ${offsetX}px ${offsetY}px, ${offsetX}px ${offsetY}px, ${offsetX}px ${offsetY}px, ${offsetX}px ${offsetY}px !important;\n        background-blend-mode: difference !important;\n        background-image: linear-gradient(rgba(130, 130, 130, ${opacity}) 1px, transparent 1px),\n         linear-gradient(90deg, rgba(130, 130, 130, ${opacity}) 1px, transparent 1px),\n         linear-gradient(rgba(130, 130, 130, ${opacity / 2}) 1px, transparent 1px),\n         linear-gradient(90deg, rgba(130, 130, 130, ${opacity / 2}) 1px, transparent 1px) !important;\n      }\n    `;\n    }, [cellSize]);\n  return useEffect(() => {\n    let selectorId = context.viewMode === \"docs\" ? `addon-backgrounds-grid-docs-${context.id}` : \"addon-backgrounds-grid\";\n    if (!isActive) {\n      clearStyles(selectorId);\n      return;\n    }\n    addGridStyle(selectorId, gridStyles);\n  }, [isActive, gridStyles, context]), StoryFn();\n};\nvar decorators = [withGrid, withBackground],\n  parameters = {\n    [PARAM_KEY]: {\n      grid: {\n        cellSize: 20,\n        opacity: .5,\n        cellAmount: 5\n      },\n      values: [{\n        name: \"light\",\n        value: \"#F8F8F8\"\n      }, {\n        name: \"dark\",\n        value: \"#333333\"\n      }]\n    }\n  },\n  globals = {\n    [PARAM_KEY]: null\n  };\nexport { decorators, globals, parameters };","map":{"version":3,"names":["useMemo","useEffect","global","dedent","logger","PARAM_KEY","document","window","isReduceMotionEnabled","matchMedia","matches","getBackgroundColorByName","currentSelectedValue","backgrounds","defaultName","find","background","value","defaultBackground","name","availableColors","map","join","warn","clearStyles","selector","Array","isArray","forEach","clearStyle","element","getElementById","parentElement","removeChild","addGridStyle","css","existingStyle","innerHTML","style","createElement","setAttribute","head","appendChild","addBackgroundStyle","storyId","gridStyleSelector","existingGridStyle","insertBefore","withBackground","StoryFn","context","globals","globals2","parameters","parameters2","globalsBackgroundColor","backgroundsConfig","selectedBackgroundColor","disable","values","default","isActive","viewMode","id","backgroundStyles","transitionStyle","selectorId","withGrid","gridParameters","grid","cellAmount","cellSize","opacity","isInDocs","defaultOffset","layout","offsetX","offsetY","gridStyles","backgroundSize","decorators"],"sources":["C:/Users/drevo/Documents/GitHub/Crafts/TypeScript/Storybook/node_modules/@storybook/addon-backgrounds/dist/preview.js"],"sourcesContent":["import { useMemo, useEffect } from '@storybook/preview-api';\nimport { global } from '@storybook/global';\nimport { dedent } from 'ts-dedent';\nimport { logger } from '@storybook/client-logger';\n\nvar PARAM_KEY=\"backgrounds\";var{document,window}=global,isReduceMotionEnabled=()=>window.matchMedia(\"(prefers-reduced-motion: reduce)\").matches,getBackgroundColorByName=(currentSelectedValue,backgrounds=[],defaultName)=>{if(currentSelectedValue===\"transparent\")return \"transparent\";if(backgrounds.find(background=>background.value===currentSelectedValue))return currentSelectedValue;let defaultBackground=backgrounds.find(background=>background.name===defaultName);if(defaultBackground)return defaultBackground.value;if(defaultName){let availableColors=backgrounds.map(background=>background.name).join(\", \");logger.warn(dedent`\n        Backgrounds Addon: could not find the default color \"${defaultName}\".\n        These are the available colors for your story based on your configuration:\n        ${availableColors}.\n      `);}return \"transparent\"},clearStyles=selector=>{(Array.isArray(selector)?selector:[selector]).forEach(clearStyle);},clearStyle=selector=>{let element=document.getElementById(selector);element&&element.parentElement?.removeChild(element);},addGridStyle=(selector,css)=>{let existingStyle=document.getElementById(selector);if(existingStyle)existingStyle.innerHTML!==css&&(existingStyle.innerHTML=css);else {let style=document.createElement(\"style\");style.setAttribute(\"id\",selector),style.innerHTML=css,document.head.appendChild(style);}},addBackgroundStyle=(selector,css,storyId)=>{let existingStyle=document.getElementById(selector);if(existingStyle)existingStyle.innerHTML!==css&&(existingStyle.innerHTML=css);else {let style=document.createElement(\"style\");style.setAttribute(\"id\",selector),style.innerHTML=css;let gridStyleSelector=`addon-backgrounds-grid${storyId?`-docs-${storyId}`:\"\"}`,existingGridStyle=document.getElementById(gridStyleSelector);existingGridStyle?existingGridStyle.parentElement?.insertBefore(style,existingGridStyle):document.head.appendChild(style);}};var withBackground=(StoryFn,context)=>{let{globals:globals2,parameters:parameters2}=context,globalsBackgroundColor=globals2[PARAM_KEY]?.value,backgroundsConfig=parameters2[PARAM_KEY],selectedBackgroundColor=useMemo(()=>backgroundsConfig.disable?\"transparent\":getBackgroundColorByName(globalsBackgroundColor,backgroundsConfig.values,backgroundsConfig.default),[backgroundsConfig,globalsBackgroundColor]),isActive=useMemo(()=>selectedBackgroundColor&&selectedBackgroundColor!==\"transparent\",[selectedBackgroundColor]),selector=context.viewMode===\"docs\"?`#anchor--${context.id} .docs-story`:\".sb-show-main\",backgroundStyles=useMemo(()=>{let transitionStyle=\"transition: background-color 0.3s;\";return `\n      ${selector} {\n        background: ${selectedBackgroundColor} !important;\n        ${isReduceMotionEnabled()?\"\":transitionStyle}\n      }\n    `},[selectedBackgroundColor,selector]);return useEffect(()=>{let selectorId=context.viewMode===\"docs\"?`addon-backgrounds-docs-${context.id}`:\"addon-backgrounds-color\";if(!isActive){clearStyles(selectorId);return}addBackgroundStyle(selectorId,backgroundStyles,context.viewMode===\"docs\"?context.id:null);},[isActive,backgroundStyles,context]),StoryFn()};var withGrid=(StoryFn,context)=>{let{globals:globals2,parameters:parameters2}=context,gridParameters=parameters2[PARAM_KEY].grid,isActive=globals2[PARAM_KEY]?.grid===!0&&gridParameters.disable!==!0,{cellAmount,cellSize,opacity}=gridParameters,isInDocs=context.viewMode===\"docs\",defaultOffset=parameters2.layout===void 0||parameters2.layout===\"padded\"?16:0,offsetX=gridParameters.offsetX??(isInDocs?20:defaultOffset),offsetY=gridParameters.offsetY??(isInDocs?20:defaultOffset),gridStyles=useMemo(()=>{let selector=context.viewMode===\"docs\"?`#anchor--${context.id} .docs-story`:\".sb-show-main\",backgroundSize=[`${cellSize*cellAmount}px ${cellSize*cellAmount}px`,`${cellSize*cellAmount}px ${cellSize*cellAmount}px`,`${cellSize}px ${cellSize}px`,`${cellSize}px ${cellSize}px`].join(\", \");return `\n      ${selector} {\n        background-size: ${backgroundSize} !important;\n        background-position: ${offsetX}px ${offsetY}px, ${offsetX}px ${offsetY}px, ${offsetX}px ${offsetY}px, ${offsetX}px ${offsetY}px !important;\n        background-blend-mode: difference !important;\n        background-image: linear-gradient(rgba(130, 130, 130, ${opacity}) 1px, transparent 1px),\n         linear-gradient(90deg, rgba(130, 130, 130, ${opacity}) 1px, transparent 1px),\n         linear-gradient(rgba(130, 130, 130, ${opacity/2}) 1px, transparent 1px),\n         linear-gradient(90deg, rgba(130, 130, 130, ${opacity/2}) 1px, transparent 1px) !important;\n      }\n    `},[cellSize]);return useEffect(()=>{let selectorId=context.viewMode===\"docs\"?`addon-backgrounds-grid-docs-${context.id}`:\"addon-backgrounds-grid\";if(!isActive){clearStyles(selectorId);return}addGridStyle(selectorId,gridStyles);},[isActive,gridStyles,context]),StoryFn()};var decorators=[withGrid,withBackground],parameters={[PARAM_KEY]:{grid:{cellSize:20,opacity:.5,cellAmount:5},values:[{name:\"light\",value:\"#F8F8F8\"},{name:\"dark\",value:\"#333333\"}]}},globals={[PARAM_KEY]:null};\n\nexport { decorators, globals, parameters };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}