{"ast":null,"code":"/* eslint no-var: off */\n/**\n * This file is responsible for parsing the content from the DOM and making\n * sure data is nested properly.\n *\n * @author Tim Scanlin\n */\n\nmodule.exports = function parseContent(options) {\n  var reduce = [].reduce;\n\n  /**\n   * Get the last item in an array and return a reference to it.\n   * @param {Array} array\n   * @return {Object}\n   */\n  function getLastItem(array) {\n    return array[array.length - 1];\n  }\n\n  /**\n   * Get heading level for a heading dom node.\n   * @param {HTMLElement} heading\n   * @return {Number}\n   */\n  function getHeadingLevel(heading) {\n    return +heading.nodeName.toUpperCase().replace('H', '');\n  }\n\n  /**\n   * Determine whether the object is an HTML Element.\n   * Also works inside iframes. HTML Elements might be created by the parent document.\n   * @param {Object} maybeElement\n   * @return {Number}\n   */\n  function isHTMLElement(maybeElement) {\n    try {\n      return maybeElement instanceof window.HTMLElement || maybeElement instanceof window.parent.HTMLElement;\n    } catch (e) {\n      return maybeElement instanceof window.HTMLElement;\n    }\n  }\n\n  /**\n   * Get important properties from a heading element and store in a plain object.\n   * @param {HTMLElement} heading\n   * @return {Object}\n   */\n  function getHeadingObject(heading) {\n    // each node is processed twice by this method because nestHeadingsArray() and addNode() calls it\n    // first time heading is real DOM node element, second time it is obj\n    // that is causing problem so I am processing only original DOM node\n    if (!isHTMLElement(heading)) return heading;\n    if (options.ignoreHiddenElements && (!heading.offsetHeight || !heading.offsetParent)) {\n      return null;\n    }\n    const headingLabel = heading.getAttribute('data-heading-label') || (options.headingLabelCallback ? String(options.headingLabelCallback(heading.innerText)) : (heading.innerText || heading.textContent).trim());\n    var obj = {\n      id: heading.id,\n      children: [],\n      nodeName: heading.nodeName,\n      headingLevel: getHeadingLevel(heading),\n      textContent: headingLabel\n    };\n    if (options.includeHtml) {\n      obj.childNodes = heading.childNodes;\n    }\n    if (options.headingObjectCallback) {\n      return options.headingObjectCallback(obj, heading);\n    }\n    return obj;\n  }\n\n  /**\n   * Add a node to the nested array.\n   * @param {Object} node\n   * @param {Array} nest\n   * @return {Array}\n   */\n  function addNode(node, nest) {\n    var obj = getHeadingObject(node);\n    var level = obj.headingLevel;\n    var array = nest;\n    var lastItem = getLastItem(array);\n    var lastItemLevel = lastItem ? lastItem.headingLevel : 0;\n    var counter = level - lastItemLevel;\n    while (counter > 0) {\n      lastItem = getLastItem(array);\n      // Handle case where there are multiple h5+ in a row.\n      if (lastItem && level === lastItem.headingLevel) {\n        break;\n      } else if (lastItem && lastItem.children !== undefined) {\n        array = lastItem.children;\n      }\n      counter--;\n    }\n    if (level >= options.collapseDepth) {\n      obj.isCollapsed = true;\n    }\n    array.push(obj);\n    return array;\n  }\n\n  /**\n   * Select headings in content area, exclude any selector in options.ignoreSelector\n   * @param {HTMLElement} contentElement\n   * @param {Array} headingSelector\n   * @return {Array}\n   */\n  function selectHeadings(contentElement, headingSelector) {\n    var selectors = headingSelector;\n    if (options.ignoreSelector) {\n      selectors = headingSelector.split(',').map(function mapSelectors(selector) {\n        return selector.trim() + ':not(' + options.ignoreSelector + ')';\n      });\n    }\n    try {\n      return contentElement.querySelectorAll(selectors);\n    } catch (e) {\n      console.warn('Headers not found with selector: ' + selectors); // eslint-disable-line\n      return null;\n    }\n  }\n\n  /**\n   * Nest headings array into nested arrays with 'children' property.\n   * @param {Array} headingsArray\n   * @return {Object}\n   */\n  function nestHeadingsArray(headingsArray) {\n    return reduce.call(headingsArray, function reducer(prev, curr) {\n      var currentHeading = getHeadingObject(curr);\n      if (currentHeading) {\n        addNode(currentHeading, prev.nest);\n      }\n      return prev;\n    }, {\n      nest: []\n    });\n  }\n  return {\n    nestHeadingsArray,\n    selectHeadings\n  };\n};","map":{"version":3,"names":["module","exports","parseContent","options","reduce","getLastItem","array","length","getHeadingLevel","heading","nodeName","toUpperCase","replace","isHTMLElement","maybeElement","window","HTMLElement","parent","e","getHeadingObject","ignoreHiddenElements","offsetHeight","offsetParent","headingLabel","getAttribute","headingLabelCallback","String","innerText","textContent","trim","obj","id","children","headingLevel","includeHtml","childNodes","headingObjectCallback","addNode","node","nest","level","lastItem","lastItemLevel","counter","undefined","collapseDepth","isCollapsed","push","selectHeadings","contentElement","headingSelector","selectors","ignoreSelector","split","map","mapSelectors","selector","querySelectorAll","console","warn","nestHeadingsArray","headingsArray","call","reducer","prev","curr","currentHeading"],"sources":["C:/Users/drevo/Documents/GitHub/Crafts/TypeScript/Storybook/node_modules/tocbot/src/js/parse-content.js"],"sourcesContent":["/* eslint no-var: off */\n/**\n * This file is responsible for parsing the content from the DOM and making\n * sure data is nested properly.\n *\n * @author Tim Scanlin\n */\n\nmodule.exports = function parseContent (options) {\n  var reduce = [].reduce\n\n  /**\n   * Get the last item in an array and return a reference to it.\n   * @param {Array} array\n   * @return {Object}\n   */\n  function getLastItem (array) {\n    return array[array.length - 1]\n  }\n\n  /**\n   * Get heading level for a heading dom node.\n   * @param {HTMLElement} heading\n   * @return {Number}\n   */\n  function getHeadingLevel (heading) {\n    return +heading.nodeName.toUpperCase().replace('H', '')\n  }\n\n  /**\n   * Determine whether the object is an HTML Element.\n   * Also works inside iframes. HTML Elements might be created by the parent document.\n   * @param {Object} maybeElement\n   * @return {Number}\n   */\n  function isHTMLElement (maybeElement) {\n    try {\n      return (\n        maybeElement instanceof window.HTMLElement ||\n        maybeElement instanceof window.parent.HTMLElement\n      )\n    } catch (e) {\n      return maybeElement instanceof window.HTMLElement\n    }\n  }\n\n  /**\n   * Get important properties from a heading element and store in a plain object.\n   * @param {HTMLElement} heading\n   * @return {Object}\n   */\n  function getHeadingObject (heading) {\n    // each node is processed twice by this method because nestHeadingsArray() and addNode() calls it\n    // first time heading is real DOM node element, second time it is obj\n    // that is causing problem so I am processing only original DOM node\n    if (!isHTMLElement(heading)) return heading\n\n    if (options.ignoreHiddenElements && (!heading.offsetHeight || !heading.offsetParent)) {\n      return null\n    }\n\n    const headingLabel = heading.getAttribute('data-heading-label') ||\n      (options.headingLabelCallback ? String(options.headingLabelCallback(heading.innerText)) : (heading.innerText || heading.textContent).trim())\n    var obj = {\n      id: heading.id,\n      children: [],\n      nodeName: heading.nodeName,\n      headingLevel: getHeadingLevel(heading),\n      textContent: headingLabel\n    }\n\n    if (options.includeHtml) {\n      obj.childNodes = heading.childNodes\n    }\n\n    if (options.headingObjectCallback) {\n      return options.headingObjectCallback(obj, heading)\n    }\n\n    return obj\n  }\n\n  /**\n   * Add a node to the nested array.\n   * @param {Object} node\n   * @param {Array} nest\n   * @return {Array}\n   */\n  function addNode (node, nest) {\n    var obj = getHeadingObject(node)\n    var level = obj.headingLevel\n    var array = nest\n    var lastItem = getLastItem(array)\n    var lastItemLevel = lastItem\n      ? lastItem.headingLevel\n      : 0\n    var counter = level - lastItemLevel\n\n    while (counter > 0) {\n      lastItem = getLastItem(array)\n      // Handle case where there are multiple h5+ in a row.\n      if (lastItem && level === lastItem.headingLevel) {\n        break\n      } else if (lastItem && lastItem.children !== undefined) {\n        array = lastItem.children\n      }\n      counter--\n    }\n\n    if (level >= options.collapseDepth) {\n      obj.isCollapsed = true\n    }\n\n    array.push(obj)\n    return array\n  }\n\n  /**\n   * Select headings in content area, exclude any selector in options.ignoreSelector\n   * @param {HTMLElement} contentElement\n   * @param {Array} headingSelector\n   * @return {Array}\n   */\n  function selectHeadings (contentElement, headingSelector) {\n    var selectors = headingSelector\n    if (options.ignoreSelector) {\n      selectors = headingSelector.split(',')\n        .map(function mapSelectors (selector) {\n          return selector.trim() + ':not(' + options.ignoreSelector + ')'\n        })\n    }\n    try {\n      return contentElement.querySelectorAll(selectors)\n    } catch (e) {\n      console.warn('Headers not found with selector: ' + selectors); // eslint-disable-line\n      return null\n    }\n  }\n\n  /**\n   * Nest headings array into nested arrays with 'children' property.\n   * @param {Array} headingsArray\n   * @return {Object}\n   */\n  function nestHeadingsArray (headingsArray) {\n    return reduce.call(headingsArray, function reducer (prev, curr) {\n      var currentHeading = getHeadingObject(curr)\n      if (currentHeading) {\n        addNode(currentHeading, prev.nest)\n      }\n      return prev\n    }, {\n      nest: []\n    })\n  }\n\n  return {\n    nestHeadingsArray,\n    selectHeadings\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}