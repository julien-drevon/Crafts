{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getComponentDecoratorMetadata = exports.getComponentPropsDecoratorMetadata = exports.isStandaloneComponent = exports.isComponent = exports.isDeclarable = exports.getComponentInputsOutputs = void 0;\nconst core_1 = require(\"@angular/core\");\nconst reflectionCapabilities = new core_1.ɵReflectionCapabilities();\n/**\n * Returns component Inputs / Outputs by browsing these properties and decorator\n */\nconst getComponentInputsOutputs = component => {\n  const componentMetadata = (0, exports.getComponentDecoratorMetadata)(component);\n  const componentPropsMetadata = (0, exports.getComponentPropsDecoratorMetadata)(component);\n  const initialValue = {\n    inputs: [],\n    outputs: []\n  };\n  // Adds the I/O present in @Component metadata\n  if (componentMetadata && componentMetadata.inputs) {\n    initialValue.inputs.push(...componentMetadata.inputs.map(i => ({\n      propName: typeof i === 'string' ? i : i.name,\n      templateName: typeof i === 'string' ? i : i.alias\n    })));\n  }\n  if (componentMetadata && componentMetadata.outputs) {\n    initialValue.outputs.push(...componentMetadata.outputs.map(i => ({\n      propName: i,\n      templateName: i\n    })));\n  }\n  if (!componentPropsMetadata) {\n    return initialValue;\n  }\n  // Browses component properties to extract I/O\n  // Filters properties that have the same name as the one present in the @Component property\n  return Object.entries(componentPropsMetadata).reduce((previousValue, [propertyName, values]) => {\n    const value = values.find(v => v instanceof core_1.Input || v instanceof core_1.Output);\n    if (value instanceof core_1.Input) {\n      const inputToAdd = {\n        propName: propertyName,\n        templateName: value.bindingPropertyName ?? value.alias ?? propertyName\n      };\n      const previousInputsFiltered = previousValue.inputs.filter(i => i.templateName !== propertyName);\n      return {\n        ...previousValue,\n        inputs: [...previousInputsFiltered, inputToAdd]\n      };\n    }\n    if (value instanceof core_1.Output) {\n      const outputToAdd = {\n        propName: propertyName,\n        templateName: value.bindingPropertyName ?? value.alias ?? propertyName\n      };\n      const previousOutputsFiltered = previousValue.outputs.filter(i => i.templateName !== propertyName);\n      return {\n        ...previousValue,\n        outputs: [...previousOutputsFiltered, outputToAdd]\n      };\n    }\n    return previousValue;\n  }, initialValue);\n};\nexports.getComponentInputsOutputs = getComponentInputsOutputs;\nconst isDeclarable = component => {\n  if (!component) {\n    return false;\n  }\n  const decorators = reflectionCapabilities.annotations(component);\n  return !!(decorators || []).find(d => d instanceof core_1.Directive || d instanceof core_1.Pipe || d instanceof core_1.Component);\n};\nexports.isDeclarable = isDeclarable;\nconst isComponent = component => {\n  if (!component) {\n    return false;\n  }\n  const decorators = reflectionCapabilities.annotations(component);\n  return (decorators || []).some(d => d instanceof core_1.Component);\n};\nexports.isComponent = isComponent;\nconst isStandaloneComponent = component => {\n  if (!component) {\n    return false;\n  }\n  const decorators = reflectionCapabilities.annotations(component);\n  // TODO: `standalone` is only available in Angular v14. Remove cast to `any` once\n  // Angular deps are updated to v14.x.x.\n  return (decorators || []).some(d => (d instanceof core_1.Component || d instanceof core_1.Directive || d instanceof core_1.Pipe) && d.standalone);\n};\nexports.isStandaloneComponent = isStandaloneComponent;\n/**\n * Returns all component decorator properties\n * is used to get all `@Input` and `@Output` Decorator\n */\nconst getComponentPropsDecoratorMetadata = component => {\n  return reflectionCapabilities.propMetadata(component);\n};\nexports.getComponentPropsDecoratorMetadata = getComponentPropsDecoratorMetadata;\n/**\n * Returns component decorator `@Component`\n */\nconst getComponentDecoratorMetadata = component => {\n  const decorators = reflectionCapabilities.annotations(component);\n  return decorators.reverse().find(d => d instanceof core_1.Component);\n};\nexports.getComponentDecoratorMetadata = getComponentDecoratorMetadata;","map":{"version":3,"names":["Object","defineProperty","exports","value","getComponentDecoratorMetadata","getComponentPropsDecoratorMetadata","isStandaloneComponent","isComponent","isDeclarable","getComponentInputsOutputs","core_1","require","reflectionCapabilities","ɵReflectionCapabilities","component","componentMetadata","componentPropsMetadata","initialValue","inputs","outputs","push","map","i","propName","name","templateName","alias","entries","reduce","previousValue","propertyName","values","find","v","Input","Output","inputToAdd","bindingPropertyName","previousInputsFiltered","filter","outputToAdd","previousOutputsFiltered","decorators","annotations","d","Directive","Pipe","Component","some","standalone","propMetadata","reverse"],"sources":["C:/Users/drevo/Documents/GitHub/Crafts/TypeScript/Wordle/node_modules/@storybook/angular/dist/client/angular-beta/utils/NgComponentAnalyzer.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getComponentDecoratorMetadata = exports.getComponentPropsDecoratorMetadata = exports.isStandaloneComponent = exports.isComponent = exports.isDeclarable = exports.getComponentInputsOutputs = void 0;\nconst core_1 = require(\"@angular/core\");\nconst reflectionCapabilities = new core_1.ɵReflectionCapabilities();\n/**\n * Returns component Inputs / Outputs by browsing these properties and decorator\n */\nconst getComponentInputsOutputs = (component) => {\n    const componentMetadata = (0, exports.getComponentDecoratorMetadata)(component);\n    const componentPropsMetadata = (0, exports.getComponentPropsDecoratorMetadata)(component);\n    const initialValue = {\n        inputs: [],\n        outputs: [],\n    };\n    // Adds the I/O present in @Component metadata\n    if (componentMetadata && componentMetadata.inputs) {\n        initialValue.inputs.push(...componentMetadata.inputs.map((i) => ({\n            propName: typeof i === 'string' ? i : i.name,\n            templateName: typeof i === 'string' ? i : i.alias,\n        })));\n    }\n    if (componentMetadata && componentMetadata.outputs) {\n        initialValue.outputs.push(...componentMetadata.outputs.map((i) => ({ propName: i, templateName: i })));\n    }\n    if (!componentPropsMetadata) {\n        return initialValue;\n    }\n    // Browses component properties to extract I/O\n    // Filters properties that have the same name as the one present in the @Component property\n    return Object.entries(componentPropsMetadata).reduce((previousValue, [propertyName, values]) => {\n        const value = values.find((v) => v instanceof core_1.Input || v instanceof core_1.Output);\n        if (value instanceof core_1.Input) {\n            const inputToAdd = {\n                propName: propertyName,\n                templateName: value.bindingPropertyName ?? value.alias ?? propertyName,\n            };\n            const previousInputsFiltered = previousValue.inputs.filter((i) => i.templateName !== propertyName);\n            return {\n                ...previousValue,\n                inputs: [...previousInputsFiltered, inputToAdd],\n            };\n        }\n        if (value instanceof core_1.Output) {\n            const outputToAdd = {\n                propName: propertyName,\n                templateName: value.bindingPropertyName ?? value.alias ?? propertyName,\n            };\n            const previousOutputsFiltered = previousValue.outputs.filter((i) => i.templateName !== propertyName);\n            return {\n                ...previousValue,\n                outputs: [...previousOutputsFiltered, outputToAdd],\n            };\n        }\n        return previousValue;\n    }, initialValue);\n};\nexports.getComponentInputsOutputs = getComponentInputsOutputs;\nconst isDeclarable = (component) => {\n    if (!component) {\n        return false;\n    }\n    const decorators = reflectionCapabilities.annotations(component);\n    return !!(decorators || []).find((d) => d instanceof core_1.Directive || d instanceof core_1.Pipe || d instanceof core_1.Component);\n};\nexports.isDeclarable = isDeclarable;\nconst isComponent = (component) => {\n    if (!component) {\n        return false;\n    }\n    const decorators = reflectionCapabilities.annotations(component);\n    return (decorators || []).some((d) => d instanceof core_1.Component);\n};\nexports.isComponent = isComponent;\nconst isStandaloneComponent = (component) => {\n    if (!component) {\n        return false;\n    }\n    const decorators = reflectionCapabilities.annotations(component);\n    // TODO: `standalone` is only available in Angular v14. Remove cast to `any` once\n    // Angular deps are updated to v14.x.x.\n    return (decorators || []).some((d) => (d instanceof core_1.Component || d instanceof core_1.Directive || d instanceof core_1.Pipe) && d.standalone);\n};\nexports.isStandaloneComponent = isStandaloneComponent;\n/**\n * Returns all component decorator properties\n * is used to get all `@Input` and `@Output` Decorator\n */\nconst getComponentPropsDecoratorMetadata = (component) => {\n    return reflectionCapabilities.propMetadata(component);\n};\nexports.getComponentPropsDecoratorMetadata = getComponentPropsDecoratorMetadata;\n/**\n * Returns component decorator `@Component`\n */\nconst getComponentDecoratorMetadata = (component) => {\n    const decorators = reflectionCapabilities.annotations(component);\n    return decorators.reverse().find((d) => d instanceof core_1.Component);\n};\nexports.getComponentDecoratorMetadata = getComponentDecoratorMetadata;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}