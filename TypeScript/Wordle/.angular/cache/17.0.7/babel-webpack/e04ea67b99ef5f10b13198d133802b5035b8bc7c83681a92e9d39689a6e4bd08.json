{"ast":null,"code":"/**\n * Partial implementation https://www.w3.org/TR/wai-aria-1.2/#tree_exclusion\n * which should only be used for elements with a non-presentational role i.e.\n * `role=\"none\"` and `role=\"presentation\"` will not be excluded.\n *\n * Implements aria-hidden semantics (i.e. parent overrides child)\n * Ignores \"Child Presentational: True\" characteristics\n *\n * @param element\n * @param options\n * @returns {boolean} true if excluded, otherwise false\n */\nexport function isInaccessible(element) {\n  var _element$ownerDocumen;\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$getComputedS = options.getComputedStyle,\n    getComputedStyle = _options$getComputedS === void 0 ? (_element$ownerDocumen = element.ownerDocument.defaultView) === null || _element$ownerDocumen === void 0 ? void 0 : _element$ownerDocumen.getComputedStyle : _options$getComputedS,\n    _options$isSubtreeIna = options.isSubtreeInaccessible,\n    isSubtreeInaccessibleImpl = _options$isSubtreeIna === void 0 ? isSubtreeInaccessible : _options$isSubtreeIna;\n  if (typeof getComputedStyle !== \"function\") {\n    throw new TypeError(\"Owner document of the element needs to have an associated window.\");\n  }\n  // since visibility is inherited we can exit early\n  if (getComputedStyle(element).visibility === \"hidden\") {\n    return true;\n  }\n  var currentElement = element;\n  while (currentElement) {\n    if (isSubtreeInaccessibleImpl(currentElement, {\n      getComputedStyle: getComputedStyle\n    })) {\n      return true;\n    }\n    currentElement = currentElement.parentElement;\n  }\n  return false;\n}\n/**\n *\n * @param element\n * @param options\n * @returns {boolean} - `true` if every child of the element is inaccessible\n */\nexport function isSubtreeInaccessible(element) {\n  var _element$ownerDocumen2;\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$getComputedS2 = options.getComputedStyle,\n    getComputedStyle = _options$getComputedS2 === void 0 ? (_element$ownerDocumen2 = element.ownerDocument.defaultView) === null || _element$ownerDocumen2 === void 0 ? void 0 : _element$ownerDocumen2.getComputedStyle : _options$getComputedS2;\n  if (typeof getComputedStyle !== \"function\") {\n    throw new TypeError(\"Owner document of the element needs to have an associated window.\");\n  }\n  if (element.hidden === true) {\n    return true;\n  }\n  if (element.getAttribute(\"aria-hidden\") === \"true\") {\n    return true;\n  }\n  if (getComputedStyle(element).display === \"none\") {\n    return true;\n  }\n  return false;\n}\n//# sourceMappingURL=is-inaccessible.mjs.map","map":{"version":3,"names":["isInaccessible","element","_element$ownerDocumen","options","arguments","length","undefined","_options$getComputedS","getComputedStyle","ownerDocument","defaultView","_options$isSubtreeIna","isSubtreeInaccessible","isSubtreeInaccessibleImpl","TypeError","visibility","currentElement","parentElement","_element$ownerDocumen2","_options$getComputedS2","hidden","getAttribute","display"],"sources":["C:/Users/drevo/Documents/GitHub/Crafts/TypeScript/Wordle/node_modules/dom-accessibility-api/dist/is-inaccessible.mjs"],"sourcesContent":["/**\n * Partial implementation https://www.w3.org/TR/wai-aria-1.2/#tree_exclusion\n * which should only be used for elements with a non-presentational role i.e.\n * `role=\"none\"` and `role=\"presentation\"` will not be excluded.\n *\n * Implements aria-hidden semantics (i.e. parent overrides child)\n * Ignores \"Child Presentational: True\" characteristics\n *\n * @param element\n * @param options\n * @returns {boolean} true if excluded, otherwise false\n */\nexport function isInaccessible(element) {\n  var _element$ownerDocumen;\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$getComputedS = options.getComputedStyle,\n    getComputedStyle = _options$getComputedS === void 0 ? (_element$ownerDocumen = element.ownerDocument.defaultView) === null || _element$ownerDocumen === void 0 ? void 0 : _element$ownerDocumen.getComputedStyle : _options$getComputedS,\n    _options$isSubtreeIna = options.isSubtreeInaccessible,\n    isSubtreeInaccessibleImpl = _options$isSubtreeIna === void 0 ? isSubtreeInaccessible : _options$isSubtreeIna;\n  if (typeof getComputedStyle !== \"function\") {\n    throw new TypeError(\"Owner document of the element needs to have an associated window.\");\n  }\n  // since visibility is inherited we can exit early\n  if (getComputedStyle(element).visibility === \"hidden\") {\n    return true;\n  }\n  var currentElement = element;\n  while (currentElement) {\n    if (isSubtreeInaccessibleImpl(currentElement, {\n      getComputedStyle: getComputedStyle\n    })) {\n      return true;\n    }\n    currentElement = currentElement.parentElement;\n  }\n  return false;\n}\n/**\n *\n * @param element\n * @param options\n * @returns {boolean} - `true` if every child of the element is inaccessible\n */\nexport function isSubtreeInaccessible(element) {\n  var _element$ownerDocumen2;\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$getComputedS2 = options.getComputedStyle,\n    getComputedStyle = _options$getComputedS2 === void 0 ? (_element$ownerDocumen2 = element.ownerDocument.defaultView) === null || _element$ownerDocumen2 === void 0 ? void 0 : _element$ownerDocumen2.getComputedStyle : _options$getComputedS2;\n  if (typeof getComputedStyle !== \"function\") {\n    throw new TypeError(\"Owner document of the element needs to have an associated window.\");\n  }\n  if (element.hidden === true) {\n    return true;\n  }\n  if (element.getAttribute(\"aria-hidden\") === \"true\") {\n    return true;\n  }\n  if (getComputedStyle(element).display === \"none\") {\n    return true;\n  }\n  return false;\n}\n//# sourceMappingURL=is-inaccessible.mjs.map"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,cAAcA,CAACC,OAAO,EAAE;EACtC,IAAIC,qBAAqB;EACzB,IAAIC,OAAO,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACpF,IAAIG,qBAAqB,GAAGJ,OAAO,CAACK,gBAAgB;IAClDA,gBAAgB,GAAGD,qBAAqB,KAAK,KAAK,CAAC,GAAG,CAACL,qBAAqB,GAAGD,OAAO,CAACQ,aAAa,CAACC,WAAW,MAAM,IAAI,IAAIR,qBAAqB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,qBAAqB,CAACM,gBAAgB,GAAGD,qBAAqB;IACxOI,qBAAqB,GAAGR,OAAO,CAACS,qBAAqB;IACrDC,yBAAyB,GAAGF,qBAAqB,KAAK,KAAK,CAAC,GAAGC,qBAAqB,GAAGD,qBAAqB;EAC9G,IAAI,OAAOH,gBAAgB,KAAK,UAAU,EAAE;IAC1C,MAAM,IAAIM,SAAS,CAAC,mEAAmE,CAAC;EAC1F;EACA;EACA,IAAIN,gBAAgB,CAACP,OAAO,CAAC,CAACc,UAAU,KAAK,QAAQ,EAAE;IACrD,OAAO,IAAI;EACb;EACA,IAAIC,cAAc,GAAGf,OAAO;EAC5B,OAAOe,cAAc,EAAE;IACrB,IAAIH,yBAAyB,CAACG,cAAc,EAAE;MAC5CR,gBAAgB,EAAEA;IACpB,CAAC,CAAC,EAAE;MACF,OAAO,IAAI;IACb;IACAQ,cAAc,GAAGA,cAAc,CAACC,aAAa;EAC/C;EACA,OAAO,KAAK;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASL,qBAAqBA,CAACX,OAAO,EAAE;EAC7C,IAAIiB,sBAAsB;EAC1B,IAAIf,OAAO,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACpF,IAAIe,sBAAsB,GAAGhB,OAAO,CAACK,gBAAgB;IACnDA,gBAAgB,GAAGW,sBAAsB,KAAK,KAAK,CAAC,GAAG,CAACD,sBAAsB,GAAGjB,OAAO,CAACQ,aAAa,CAACC,WAAW,MAAM,IAAI,IAAIQ,sBAAsB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,sBAAsB,CAACV,gBAAgB,GAAGW,sBAAsB;EAC/O,IAAI,OAAOX,gBAAgB,KAAK,UAAU,EAAE;IAC1C,MAAM,IAAIM,SAAS,CAAC,mEAAmE,CAAC;EAC1F;EACA,IAAIb,OAAO,CAACmB,MAAM,KAAK,IAAI,EAAE;IAC3B,OAAO,IAAI;EACb;EACA,IAAInB,OAAO,CAACoB,YAAY,CAAC,aAAa,CAAC,KAAK,MAAM,EAAE;IAClD,OAAO,IAAI;EACb;EACA,IAAIb,gBAAgB,CAACP,OAAO,CAAC,CAACqB,OAAO,KAAK,MAAM,EAAE;IAChD,OAAO,IAAI;EACb;EACA,OAAO,KAAK;AACd;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}