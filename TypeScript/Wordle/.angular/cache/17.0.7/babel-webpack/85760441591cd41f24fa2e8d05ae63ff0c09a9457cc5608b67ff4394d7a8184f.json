{"ast":null,"code":"import { getUISelection } from '../../document/UI.js';\nimport '../../utils/click/isClickableInput.js';\nimport '../../utils/dataTransfer/Clipboard.js';\nimport { getContentEditable } from '../../utils/edit/isContentEditable.js';\nimport '../../utils/edit/isEditable.js';\nimport '../../utils/edit/maxLength.js';\nimport '@testing-library/dom/dist/helpers.js';\nimport { hasOwnSelection } from '../../utils/focus/selection.js';\nimport '../../utils/keyDef/readNextDescriptor.js';\nimport '../../utils/misc/level.js';\nimport '../../options.js';\n\n/**\n * Determine which selection logic and selection ranges to consider.\n */\nfunction getTargetTypeAndSelection(node) {\n  const element = getElement(node);\n  if (element && hasOwnSelection(element)) {\n    return {\n      type: 'input',\n      selection: getUISelection(element)\n    };\n  }\n  const selection = element === null || element === void 0 ? void 0 : element.ownerDocument.getSelection();\n  // It is possible to extend a single-range selection into a contenteditable.\n  // This results in the range acting like a range outside of contenteditable.\n  const isCE = getContentEditable(node) && (selection === null || selection === void 0 ? void 0 : selection.anchorNode) && getContentEditable(selection.anchorNode);\n  return {\n    type: isCE ? 'contenteditable' : 'default',\n    selection\n  };\n}\nfunction getElement(node) {\n  return node.nodeType === 1 ? node : node.parentElement;\n}\nexport { getTargetTypeAndSelection };","map":{"version":3,"names":["getUISelection","getContentEditable","hasOwnSelection","getTargetTypeAndSelection","node","element","getElement","type","selection","ownerDocument","getSelection","isCE","anchorNode","nodeType","parentElement"],"sources":["C:/Users/drevo/Documents/GitHub/Crafts/TypeScript/Storybook/node_modules/@testing-library/user-event/dist/esm/event/selection/getTargetTypeAndSelection.js"],"sourcesContent":["import { getUISelection } from '../../document/UI.js';\nimport '../../utils/click/isClickableInput.js';\nimport '../../utils/dataTransfer/Clipboard.js';\nimport { getContentEditable } from '../../utils/edit/isContentEditable.js';\nimport '../../utils/edit/isEditable.js';\nimport '../../utils/edit/maxLength.js';\nimport '@testing-library/dom/dist/helpers.js';\nimport { hasOwnSelection } from '../../utils/focus/selection.js';\nimport '../../utils/keyDef/readNextDescriptor.js';\nimport '../../utils/misc/level.js';\nimport '../../options.js';\n\n/**\n * Determine which selection logic and selection ranges to consider.\n */ function getTargetTypeAndSelection(node) {\n    const element = getElement(node);\n    if (element && hasOwnSelection(element)) {\n        return {\n            type: 'input',\n            selection: getUISelection(element)\n        };\n    }\n    const selection = element === null || element === void 0 ? void 0 : element.ownerDocument.getSelection();\n    // It is possible to extend a single-range selection into a contenteditable.\n    // This results in the range acting like a range outside of contenteditable.\n    const isCE = getContentEditable(node) && (selection === null || selection === void 0 ? void 0 : selection.anchorNode) && getContentEditable(selection.anchorNode);\n    return {\n        type: isCE ? 'contenteditable' : 'default',\n        selection\n    };\n}\nfunction getElement(node) {\n    return node.nodeType === 1 ? node : node.parentElement;\n}\n\nexport { getTargetTypeAndSelection };\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,sBAAsB;AACrD,OAAO,uCAAuC;AAC9C,OAAO,uCAAuC;AAC9C,SAASC,kBAAkB,QAAQ,uCAAuC;AAC1E,OAAO,gCAAgC;AACvC,OAAO,+BAA+B;AACtC,OAAO,sCAAsC;AAC7C,SAASC,eAAe,QAAQ,gCAAgC;AAChE,OAAO,0CAA0C;AACjD,OAAO,2BAA2B;AAClC,OAAO,kBAAkB;;AAEzB;AACA;AACA;AAAI,SAASC,yBAAyBA,CAACC,IAAI,EAAE;EACzC,MAAMC,OAAO,GAAGC,UAAU,CAACF,IAAI,CAAC;EAChC,IAAIC,OAAO,IAAIH,eAAe,CAACG,OAAO,CAAC,EAAE;IACrC,OAAO;MACHE,IAAI,EAAE,OAAO;MACbC,SAAS,EAAER,cAAc,CAACK,OAAO;IACrC,CAAC;EACL;EACA,MAAMG,SAAS,GAAGH,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACI,aAAa,CAACC,YAAY,CAAC,CAAC;EACxG;EACA;EACA,MAAMC,IAAI,GAAGV,kBAAkB,CAACG,IAAI,CAAC,KAAKI,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,SAAS,CAACI,UAAU,CAAC,IAAIX,kBAAkB,CAACO,SAAS,CAACI,UAAU,CAAC;EACjK,OAAO;IACHL,IAAI,EAAEI,IAAI,GAAG,iBAAiB,GAAG,SAAS;IAC1CH;EACJ,CAAC;AACL;AACA,SAASF,UAAUA,CAACF,IAAI,EAAE;EACtB,OAAOA,IAAI,CAACS,QAAQ,KAAK,CAAC,GAAGT,IAAI,GAAGA,IAAI,CAACU,aAAa;AAC1D;AAEA,SAASX,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}