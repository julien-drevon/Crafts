{"ast":null,"code":"import { isElementType } from './isElementType.js';\n\n// This should probably just rely on the :disabled pseudo-class, but JSDOM doesn't implement it properly.\nfunction isDisabled(element) {\n  for (let el = element; el; el = el.parentElement) {\n    if (isElementType(el, ['button', 'input', 'select', 'textarea', 'optgroup', 'option'])) {\n      if (el.hasAttribute('disabled')) {\n        return true;\n      }\n    } else if (isElementType(el, 'fieldset')) {\n      var _el_querySelector;\n      if (el.hasAttribute('disabled') && !((_el_querySelector = el.querySelector(':scope > legend')) === null || _el_querySelector === void 0 ? void 0 : _el_querySelector.contains(element))) {\n        return true;\n      }\n    } else if (el.tagName.includes('-')) {\n      if (el.constructor.formAssociated && el.hasAttribute('disabled')) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nexport { isDisabled };","map":{"version":3,"names":["isElementType","isDisabled","element","el","parentElement","hasAttribute","_el_querySelector","querySelector","contains","tagName","includes","constructor","formAssociated"],"sources":["C:/Users/drevo/Documents/GitHub/Crafts/TypeScript/Storybook/node_modules/@testing-library/user-event/dist/esm/utils/misc/isDisabled.js"],"sourcesContent":["import { isElementType } from './isElementType.js';\n\n// This should probably just rely on the :disabled pseudo-class, but JSDOM doesn't implement it properly.\nfunction isDisabled(element) {\n    for(let el = element; el; el = el.parentElement){\n        if (isElementType(el, [\n            'button',\n            'input',\n            'select',\n            'textarea',\n            'optgroup',\n            'option'\n        ])) {\n            if (el.hasAttribute('disabled')) {\n                return true;\n            }\n        } else if (isElementType(el, 'fieldset')) {\n            var _el_querySelector;\n            if (el.hasAttribute('disabled') && !((_el_querySelector = el.querySelector(':scope > legend')) === null || _el_querySelector === void 0 ? void 0 : _el_querySelector.contains(element))) {\n                return true;\n            }\n        } else if (el.tagName.includes('-')) {\n            if (el.constructor.formAssociated && el.hasAttribute('disabled')) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nexport { isDisabled };\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,oBAAoB;;AAElD;AACA,SAASC,UAAUA,CAACC,OAAO,EAAE;EACzB,KAAI,IAAIC,EAAE,GAAGD,OAAO,EAAEC,EAAE,EAAEA,EAAE,GAAGA,EAAE,CAACC,aAAa,EAAC;IAC5C,IAAIJ,aAAa,CAACG,EAAE,EAAE,CAClB,QAAQ,EACR,OAAO,EACP,QAAQ,EACR,UAAU,EACV,UAAU,EACV,QAAQ,CACX,CAAC,EAAE;MACA,IAAIA,EAAE,CAACE,YAAY,CAAC,UAAU,CAAC,EAAE;QAC7B,OAAO,IAAI;MACf;IACJ,CAAC,MAAM,IAAIL,aAAa,CAACG,EAAE,EAAE,UAAU,CAAC,EAAE;MACtC,IAAIG,iBAAiB;MACrB,IAAIH,EAAE,CAACE,YAAY,CAAC,UAAU,CAAC,IAAI,EAAE,CAACC,iBAAiB,GAAGH,EAAE,CAACI,aAAa,CAAC,iBAAiB,CAAC,MAAM,IAAI,IAAID,iBAAiB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,iBAAiB,CAACE,QAAQ,CAACN,OAAO,CAAC,CAAC,EAAE;QACrL,OAAO,IAAI;MACf;IACJ,CAAC,MAAM,IAAIC,EAAE,CAACM,OAAO,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;MACjC,IAAIP,EAAE,CAACQ,WAAW,CAACC,cAAc,IAAIT,EAAE,CAACE,YAAY,CAAC,UAAU,CAAC,EAAE;QAC9D,OAAO,IAAI;MACf;IACJ;EACJ;EACA,OAAO,KAAK;AAChB;AAEA,SAASJ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}