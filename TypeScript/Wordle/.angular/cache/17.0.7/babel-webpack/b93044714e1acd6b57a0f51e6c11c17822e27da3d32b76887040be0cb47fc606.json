{"ast":null,"code":"function isDifferentPointerPosition(positionA, positionB) {\n  var _positionA_coords, _positionB_coords, _positionA_coords1, _positionB_coords1, _positionA_caret, _positionB_caret, _positionA_caret1, _positionB_caret1;\n  return positionA.target !== positionB.target || ((_positionA_coords = positionA.coords) === null || _positionA_coords === void 0 ? void 0 : _positionA_coords.x) !== ((_positionB_coords = positionB.coords) === null || _positionB_coords === void 0 ? void 0 : _positionB_coords.y) || ((_positionA_coords1 = positionA.coords) === null || _positionA_coords1 === void 0 ? void 0 : _positionA_coords1.y) !== ((_positionB_coords1 = positionB.coords) === null || _positionB_coords1 === void 0 ? void 0 : _positionB_coords1.y) || ((_positionA_caret = positionA.caret) === null || _positionA_caret === void 0 ? void 0 : _positionA_caret.node) !== ((_positionB_caret = positionB.caret) === null || _positionB_caret === void 0 ? void 0 : _positionB_caret.node) || ((_positionA_caret1 = positionA.caret) === null || _positionA_caret1 === void 0 ? void 0 : _positionA_caret1.offset) !== ((_positionB_caret1 = positionB.caret) === null || _positionB_caret1 === void 0 ? void 0 : _positionB_caret1.offset);\n}\nexport { isDifferentPointerPosition };","map":{"version":3,"names":["isDifferentPointerPosition","positionA","positionB","_positionA_coords","_positionB_coords","_positionA_coords1","_positionB_coords1","_positionA_caret","_positionB_caret","_positionA_caret1","_positionB_caret1","target","coords","x","y","caret","node","offset"],"sources":["C:/Users/drevo/Documents/GitHub/Crafts/TypeScript/Wordle/node_modules/@testing-library/user-event/dist/esm/system/pointer/shared.js"],"sourcesContent":["function isDifferentPointerPosition(positionA, positionB) {\n    var _positionA_coords, _positionB_coords, _positionA_coords1, _positionB_coords1, _positionA_caret, _positionB_caret, _positionA_caret1, _positionB_caret1;\n    return positionA.target !== positionB.target || ((_positionA_coords = positionA.coords) === null || _positionA_coords === void 0 ? void 0 : _positionA_coords.x) !== ((_positionB_coords = positionB.coords) === null || _positionB_coords === void 0 ? void 0 : _positionB_coords.y) || ((_positionA_coords1 = positionA.coords) === null || _positionA_coords1 === void 0 ? void 0 : _positionA_coords1.y) !== ((_positionB_coords1 = positionB.coords) === null || _positionB_coords1 === void 0 ? void 0 : _positionB_coords1.y) || ((_positionA_caret = positionA.caret) === null || _positionA_caret === void 0 ? void 0 : _positionA_caret.node) !== ((_positionB_caret = positionB.caret) === null || _positionB_caret === void 0 ? void 0 : _positionB_caret.node) || ((_positionA_caret1 = positionA.caret) === null || _positionA_caret1 === void 0 ? void 0 : _positionA_caret1.offset) !== ((_positionB_caret1 = positionB.caret) === null || _positionB_caret1 === void 0 ? void 0 : _positionB_caret1.offset);\n}\n\nexport { isDifferentPointerPosition };\n"],"mappings":"AAAA,SAASA,0BAA0BA,CAACC,SAAS,EAAEC,SAAS,EAAE;EACtD,IAAIC,iBAAiB,EAAEC,iBAAiB,EAAEC,kBAAkB,EAAEC,kBAAkB,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAEC,iBAAiB,EAAEC,iBAAiB;EAC1J,OAAOT,SAAS,CAACU,MAAM,KAAKT,SAAS,CAACS,MAAM,IAAI,CAAC,CAACR,iBAAiB,GAAGF,SAAS,CAACW,MAAM,MAAM,IAAI,IAAIT,iBAAiB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,iBAAiB,CAACU,CAAC,OAAO,CAACT,iBAAiB,GAAGF,SAAS,CAACU,MAAM,MAAM,IAAI,IAAIR,iBAAiB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,iBAAiB,CAACU,CAAC,CAAC,IAAI,CAAC,CAACT,kBAAkB,GAAGJ,SAAS,CAACW,MAAM,MAAM,IAAI,IAAIP,kBAAkB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,kBAAkB,CAACS,CAAC,OAAO,CAACR,kBAAkB,GAAGJ,SAAS,CAACU,MAAM,MAAM,IAAI,IAAIN,kBAAkB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,kBAAkB,CAACQ,CAAC,CAAC,IAAI,CAAC,CAACP,gBAAgB,GAAGN,SAAS,CAACc,KAAK,MAAM,IAAI,IAAIR,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAACS,IAAI,OAAO,CAACR,gBAAgB,GAAGN,SAAS,CAACa,KAAK,MAAM,IAAI,IAAIP,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAACQ,IAAI,CAAC,IAAI,CAAC,CAACP,iBAAiB,GAAGR,SAAS,CAACc,KAAK,MAAM,IAAI,IAAIN,iBAAiB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,iBAAiB,CAACQ,MAAM,OAAO,CAACP,iBAAiB,GAAGR,SAAS,CAACa,KAAK,MAAM,IAAI,IAAIL,iBAAiB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,iBAAiB,CAACO,MAAM,CAAC;AACh+B;AAEA,SAASjB,0BAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}