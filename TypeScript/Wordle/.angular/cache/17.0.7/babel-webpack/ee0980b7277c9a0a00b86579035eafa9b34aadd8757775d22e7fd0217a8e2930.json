{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/drevo/Documents/GitHub/Crafts/TypeScript/Wordle/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nfunction click(_x) {\n  return _click.apply(this, arguments);\n}\nfunction _click() {\n  _click = _asyncToGenerator(function* (element) {\n    const pointerIn = [];\n    if (!this.config.skipHover) {\n      pointerIn.push({\n        target: element\n      });\n    }\n    pointerIn.push({\n      keys: '[MouseLeft]',\n      target: element\n    });\n    return this.pointer(pointerIn);\n  });\n  return _click.apply(this, arguments);\n}\nfunction dblClick(_x2) {\n  return _dblClick.apply(this, arguments);\n}\nfunction _dblClick() {\n  _dblClick = _asyncToGenerator(function* (element) {\n    return this.pointer([{\n      target: element\n    }, '[MouseLeft][MouseLeft]']);\n  });\n  return _dblClick.apply(this, arguments);\n}\nfunction tripleClick(_x3) {\n  return _tripleClick.apply(this, arguments);\n}\nfunction _tripleClick() {\n  _tripleClick = _asyncToGenerator(function* (element) {\n    return this.pointer([{\n      target: element\n    }, '[MouseLeft][MouseLeft][MouseLeft]']);\n  });\n  return _tripleClick.apply(this, arguments);\n}\nexport { click, dblClick, tripleClick };","map":{"version":3,"names":["click","_x","_click","apply","arguments","_asyncToGenerator","element","pointerIn","config","skipHover","push","target","keys","pointer","dblClick","_x2","_dblClick","tripleClick","_x3","_tripleClick"],"sources":["C:/Users/drevo/Documents/GitHub/Crafts/TypeScript/Wordle/node_modules/@testing-library/user-event/dist/esm/convenience/click.js"],"sourcesContent":["async function click(element) {\n    const pointerIn = [];\n    if (!this.config.skipHover) {\n        pointerIn.push({\n            target: element\n        });\n    }\n    pointerIn.push({\n        keys: '[MouseLeft]',\n        target: element\n    });\n    return this.pointer(pointerIn);\n}\nasync function dblClick(element) {\n    return this.pointer([\n        {\n            target: element\n        },\n        '[MouseLeft][MouseLeft]'\n    ]);\n}\nasync function tripleClick(element) {\n    return this.pointer([\n        {\n            target: element\n        },\n        '[MouseLeft][MouseLeft][MouseLeft]'\n    ]);\n}\n\nexport { click, dblClick, tripleClick };\n"],"mappings":";SAAeA,KAAKA,CAAAC,EAAA;EAAA,OAAAC,MAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,OAAA;EAAAA,MAAA,GAAAG,iBAAA,CAApB,WAAqBC,OAAO,EAAE;IAC1B,MAAMC,SAAS,GAAG,EAAE;IACpB,IAAI,CAAC,IAAI,CAACC,MAAM,CAACC,SAAS,EAAE;MACxBF,SAAS,CAACG,IAAI,CAAC;QACXC,MAAM,EAAEL;MACZ,CAAC,CAAC;IACN;IACAC,SAAS,CAACG,IAAI,CAAC;MACXE,IAAI,EAAE,aAAa;MACnBD,MAAM,EAAEL;IACZ,CAAC,CAAC;IACF,OAAO,IAAI,CAACO,OAAO,CAACN,SAAS,CAAC;EAClC,CAAC;EAAA,OAAAL,MAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SACcU,QAAQA,CAAAC,GAAA;EAAA,OAAAC,SAAA,CAAAb,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAY,UAAA;EAAAA,SAAA,GAAAX,iBAAA,CAAvB,WAAwBC,OAAO,EAAE;IAC7B,OAAO,IAAI,CAACO,OAAO,CAAC,CAChB;MACIF,MAAM,EAAEL;IACZ,CAAC,EACD,wBAAwB,CAC3B,CAAC;EACN,CAAC;EAAA,OAAAU,SAAA,CAAAb,KAAA,OAAAC,SAAA;AAAA;AAAA,SACca,WAAWA,CAAAC,GAAA;EAAA,OAAAC,YAAA,CAAAhB,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAe,aAAA;EAAAA,YAAA,GAAAd,iBAAA,CAA1B,WAA2BC,OAAO,EAAE;IAChC,OAAO,IAAI,CAACO,OAAO,CAAC,CAChB;MACIF,MAAM,EAAEL;IACZ,CAAC,EACD,mCAAmC,CACtC,CAAC;EACN,CAAC;EAAA,OAAAa,YAAA,CAAAhB,KAAA,OAAAC,SAAA;AAAA;AAED,SAASJ,KAAK,EAAEc,QAAQ,EAAEG,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}