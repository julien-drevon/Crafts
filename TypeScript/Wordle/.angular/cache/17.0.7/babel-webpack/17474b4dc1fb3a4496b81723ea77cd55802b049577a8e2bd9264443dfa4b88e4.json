{"ast":null,"code":"import './behavior/click.js';\nimport './behavior/cut.js';\nimport './behavior/keydown.js';\nimport './behavior/keypress.js';\nimport './behavior/keyup.js';\nimport './behavior/paste.js';\nimport { behavior } from './behavior/registry.js';\nimport { wrapEvent } from './wrapEvent.js';\nimport { isMouseEvent, isKeyboardEvent } from './eventMap.js';\nimport { createEvent } from './createEvent.js';\nfunction dispatchUIEvent(target, type, init, preventDefault = false) {\n  if (isMouseEvent(type) || isKeyboardEvent(type)) {\n    init = {\n      ...init,\n      ...this.system.getUIEventModifiers()\n    };\n  }\n  const event = createEvent(type, target, init);\n  return dispatchEvent.call(this, target, event, preventDefault);\n}\nfunction dispatchEvent(target, event, preventDefault = false) {\n  var _behavior_type;\n  const type = event.type;\n  const behaviorImplementation = preventDefault ? () => {} : (_behavior_type = behavior[type]) === null || _behavior_type === void 0 ? void 0 : _behavior_type.call(behavior, event, target, this);\n  if (behaviorImplementation) {\n    event.preventDefault();\n    let defaultPrevented = false;\n    Object.defineProperty(event, 'defaultPrevented', {\n      get: () => defaultPrevented\n    });\n    Object.defineProperty(event, 'preventDefault', {\n      value: () => {\n        defaultPrevented = event.cancelable;\n      }\n    });\n    wrapEvent(() => target.dispatchEvent(event));\n    if (!defaultPrevented) {\n      behaviorImplementation();\n    }\n    return !defaultPrevented;\n  }\n  return wrapEvent(() => target.dispatchEvent(event));\n}\nfunction dispatchDOMEvent(target, type, init) {\n  const event = createEvent(type, target, init);\n  wrapEvent(() => target.dispatchEvent(event));\n}\nexport { dispatchDOMEvent, dispatchEvent, dispatchUIEvent };","map":{"version":3,"names":["behavior","wrapEvent","isMouseEvent","isKeyboardEvent","createEvent","dispatchUIEvent","target","type","init","preventDefault","system","getUIEventModifiers","event","dispatchEvent","call","_behavior_type","behaviorImplementation","defaultPrevented","Object","defineProperty","get","value","cancelable","dispatchDOMEvent"],"sources":["C:/Users/drevo/Documents/GitHub/Crafts/TypeScript/Storybook/node_modules/@testing-library/user-event/dist/esm/event/dispatchEvent.js"],"sourcesContent":["import './behavior/click.js';\nimport './behavior/cut.js';\nimport './behavior/keydown.js';\nimport './behavior/keypress.js';\nimport './behavior/keyup.js';\nimport './behavior/paste.js';\nimport { behavior } from './behavior/registry.js';\nimport { wrapEvent } from './wrapEvent.js';\nimport { isMouseEvent, isKeyboardEvent } from './eventMap.js';\nimport { createEvent } from './createEvent.js';\n\nfunction dispatchUIEvent(target, type, init, preventDefault = false) {\n    if (isMouseEvent(type) || isKeyboardEvent(type)) {\n        init = {\n            ...init,\n            ...this.system.getUIEventModifiers()\n        };\n    }\n    const event = createEvent(type, target, init);\n    return dispatchEvent.call(this, target, event, preventDefault);\n}\nfunction dispatchEvent(target, event, preventDefault = false) {\n    var _behavior_type;\n    const type = event.type;\n    const behaviorImplementation = preventDefault ? ()=>{} : (_behavior_type = behavior[type]) === null || _behavior_type === void 0 ? void 0 : _behavior_type.call(behavior, event, target, this);\n    if (behaviorImplementation) {\n        event.preventDefault();\n        let defaultPrevented = false;\n        Object.defineProperty(event, 'defaultPrevented', {\n            get: ()=>defaultPrevented\n        });\n        Object.defineProperty(event, 'preventDefault', {\n            value: ()=>{\n                defaultPrevented = event.cancelable;\n            }\n        });\n        wrapEvent(()=>target.dispatchEvent(event));\n        if (!defaultPrevented) {\n            behaviorImplementation();\n        }\n        return !defaultPrevented;\n    }\n    return wrapEvent(()=>target.dispatchEvent(event));\n}\nfunction dispatchDOMEvent(target, type, init) {\n    const event = createEvent(type, target, init);\n    wrapEvent(()=>target.dispatchEvent(event));\n}\n\nexport { dispatchDOMEvent, dispatchEvent, dispatchUIEvent };\n"],"mappings":"AAAA,OAAO,qBAAqB;AAC5B,OAAO,mBAAmB;AAC1B,OAAO,uBAAuB;AAC9B,OAAO,wBAAwB;AAC/B,OAAO,qBAAqB;AAC5B,OAAO,qBAAqB;AAC5B,SAASA,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,YAAY,EAAEC,eAAe,QAAQ,eAAe;AAC7D,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,SAASC,eAAeA,CAACC,MAAM,EAAEC,IAAI,EAAEC,IAAI,EAAEC,cAAc,GAAG,KAAK,EAAE;EACjE,IAAIP,YAAY,CAACK,IAAI,CAAC,IAAIJ,eAAe,CAACI,IAAI,CAAC,EAAE;IAC7CC,IAAI,GAAG;MACH,GAAGA,IAAI;MACP,GAAG,IAAI,CAACE,MAAM,CAACC,mBAAmB,CAAC;IACvC,CAAC;EACL;EACA,MAAMC,KAAK,GAAGR,WAAW,CAACG,IAAI,EAAED,MAAM,EAAEE,IAAI,CAAC;EAC7C,OAAOK,aAAa,CAACC,IAAI,CAAC,IAAI,EAAER,MAAM,EAAEM,KAAK,EAAEH,cAAc,CAAC;AAClE;AACA,SAASI,aAAaA,CAACP,MAAM,EAAEM,KAAK,EAAEH,cAAc,GAAG,KAAK,EAAE;EAC1D,IAAIM,cAAc;EAClB,MAAMR,IAAI,GAAGK,KAAK,CAACL,IAAI;EACvB,MAAMS,sBAAsB,GAAGP,cAAc,GAAG,MAAI,CAAC,CAAC,GAAG,CAACM,cAAc,GAAGf,QAAQ,CAACO,IAAI,CAAC,MAAM,IAAI,IAAIQ,cAAc,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,cAAc,CAACD,IAAI,CAACd,QAAQ,EAAEY,KAAK,EAAEN,MAAM,EAAE,IAAI,CAAC;EAC9L,IAAIU,sBAAsB,EAAE;IACxBJ,KAAK,CAACH,cAAc,CAAC,CAAC;IACtB,IAAIQ,gBAAgB,GAAG,KAAK;IAC5BC,MAAM,CAACC,cAAc,CAACP,KAAK,EAAE,kBAAkB,EAAE;MAC7CQ,GAAG,EAAEA,CAAA,KAAIH;IACb,CAAC,CAAC;IACFC,MAAM,CAACC,cAAc,CAACP,KAAK,EAAE,gBAAgB,EAAE;MAC3CS,KAAK,EAAEA,CAAA,KAAI;QACPJ,gBAAgB,GAAGL,KAAK,CAACU,UAAU;MACvC;IACJ,CAAC,CAAC;IACFrB,SAAS,CAAC,MAAIK,MAAM,CAACO,aAAa,CAACD,KAAK,CAAC,CAAC;IAC1C,IAAI,CAACK,gBAAgB,EAAE;MACnBD,sBAAsB,CAAC,CAAC;IAC5B;IACA,OAAO,CAACC,gBAAgB;EAC5B;EACA,OAAOhB,SAAS,CAAC,MAAIK,MAAM,CAACO,aAAa,CAACD,KAAK,CAAC,CAAC;AACrD;AACA,SAASW,gBAAgBA,CAACjB,MAAM,EAAEC,IAAI,EAAEC,IAAI,EAAE;EAC1C,MAAMI,KAAK,GAAGR,WAAW,CAACG,IAAI,EAAED,MAAM,EAAEE,IAAI,CAAC;EAC7CP,SAAS,CAAC,MAAIK,MAAM,CAACO,aAAa,CAACD,KAAK,CAAC,CAAC;AAC9C;AAEA,SAASW,gBAAgB,EAAEV,aAAa,EAAER,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}