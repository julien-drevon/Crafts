{"ast":null,"code":"import { isElementType } from '../misc/isElementType.js';\nvar maxLengthSupportedTypes;\n(function (maxLengthSupportedTypes) {\n  maxLengthSupportedTypes['email'] = 'email';\n  maxLengthSupportedTypes['password'] = 'password';\n  maxLengthSupportedTypes['search'] = 'search';\n  maxLengthSupportedTypes['telephone'] = 'telephone';\n  maxLengthSupportedTypes['text'] = 'text';\n  maxLengthSupportedTypes['url'] = 'url';\n})(maxLengthSupportedTypes || (maxLengthSupportedTypes = {}));\n// can't use .maxLength property because of a jsdom bug:\n// https://github.com/jsdom/jsdom/issues/2927\nfunction getMaxLength(element) {\n  var _element_getAttribute;\n  const attr = (_element_getAttribute = element.getAttribute('maxlength')) !== null && _element_getAttribute !== void 0 ? _element_getAttribute : '';\n  return /^\\d+$/.test(attr) && Number(attr) >= 0 ? Number(attr) : undefined;\n}\nfunction supportsMaxLength(element) {\n  return isElementType(element, 'textarea') || isElementType(element, 'input') && element.type in maxLengthSupportedTypes;\n}\nexport { getMaxLength, supportsMaxLength };","map":{"version":3,"names":["isElementType","maxLengthSupportedTypes","getMaxLength","element","_element_getAttribute","attr","getAttribute","test","Number","undefined","supportsMaxLength","type"],"sources":["C:/Users/drevo/Documents/GitHub/Crafts/TypeScript/Wordle/node_modules/@testing-library/user-event/dist/esm/utils/edit/maxLength.js"],"sourcesContent":["import { isElementType } from '../misc/isElementType.js';\n\nvar maxLengthSupportedTypes;\n(function(maxLengthSupportedTypes) {\n    maxLengthSupportedTypes['email'] = 'email';\n    maxLengthSupportedTypes['password'] = 'password';\n    maxLengthSupportedTypes['search'] = 'search';\n    maxLengthSupportedTypes['telephone'] = 'telephone';\n    maxLengthSupportedTypes['text'] = 'text';\n    maxLengthSupportedTypes['url'] = 'url';\n})(maxLengthSupportedTypes || (maxLengthSupportedTypes = {}));\n// can't use .maxLength property because of a jsdom bug:\n// https://github.com/jsdom/jsdom/issues/2927\nfunction getMaxLength(element) {\n    var _element_getAttribute;\n    const attr = (_element_getAttribute = element.getAttribute('maxlength')) !== null && _element_getAttribute !== void 0 ? _element_getAttribute : '';\n    return /^\\d+$/.test(attr) && Number(attr) >= 0 ? Number(attr) : undefined;\n}\nfunction supportsMaxLength(element) {\n    return isElementType(element, 'textarea') || isElementType(element, 'input') && element.type in maxLengthSupportedTypes;\n}\n\nexport { getMaxLength, supportsMaxLength };\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,0BAA0B;AAExD,IAAIC,uBAAuB;AAC3B,CAAC,UAASA,uBAAuB,EAAE;EAC/BA,uBAAuB,CAAC,OAAO,CAAC,GAAG,OAAO;EAC1CA,uBAAuB,CAAC,UAAU,CAAC,GAAG,UAAU;EAChDA,uBAAuB,CAAC,QAAQ,CAAC,GAAG,QAAQ;EAC5CA,uBAAuB,CAAC,WAAW,CAAC,GAAG,WAAW;EAClDA,uBAAuB,CAAC,MAAM,CAAC,GAAG,MAAM;EACxCA,uBAAuB,CAAC,KAAK,CAAC,GAAG,KAAK;AAC1C,CAAC,EAAEA,uBAAuB,KAAKA,uBAAuB,GAAG,CAAC,CAAC,CAAC,CAAC;AAC7D;AACA;AACA,SAASC,YAAYA,CAACC,OAAO,EAAE;EAC3B,IAAIC,qBAAqB;EACzB,MAAMC,IAAI,GAAG,CAACD,qBAAqB,GAAGD,OAAO,CAACG,YAAY,CAAC,WAAW,CAAC,MAAM,IAAI,IAAIF,qBAAqB,KAAK,KAAK,CAAC,GAAGA,qBAAqB,GAAG,EAAE;EAClJ,OAAO,OAAO,CAACG,IAAI,CAACF,IAAI,CAAC,IAAIG,MAAM,CAACH,IAAI,CAAC,IAAI,CAAC,GAAGG,MAAM,CAACH,IAAI,CAAC,GAAGI,SAAS;AAC7E;AACA,SAASC,iBAAiBA,CAACP,OAAO,EAAE;EAChC,OAAOH,aAAa,CAACG,OAAO,EAAE,UAAU,CAAC,IAAIH,aAAa,CAACG,OAAO,EAAE,OAAO,CAAC,IAAIA,OAAO,CAACQ,IAAI,IAAIV,uBAAuB;AAC3H;AAEA,SAASC,YAAY,EAAEQ,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}