{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/drevo/Documents/GitHub/Crafts/TypeScript/Wordle/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as named from '@testing-library/dom';\nimport '../utils/click/isClickableInput.js';\nimport '../utils/dataTransfer/Clipboard.js';\nimport '../utils/edit/isEditable.js';\nimport '../utils/edit/maxLength.js';\nimport { isElementType } from '../utils/misc/isElementType.js';\nimport { isDisabled } from '../utils/misc/isDisabled.js';\nimport '@testing-library/dom/dist/helpers.js';\nimport '../utils/keyDef/readNextDescriptor.js';\nimport '../utils/misc/level.js';\nimport { wait } from '../utils/misc/wait.js';\nimport { hasPointerEvents } from '../utils/pointer/cssPointerEvents.js';\nimport '../event/behavior/click.js';\nimport '../event/behavior/cut.js';\nimport '../event/behavior/keydown.js';\nimport '../event/behavior/keypress.js';\nimport '../event/behavior/keyup.js';\nimport '../event/behavior/paste.js';\nimport '../event/eventMap.js';\nimport { focusElement } from '../event/focus.js';\nconst {\n  getConfig\n} = named;\nfunction selectOptions(_x, _x2) {\n  return _selectOptions.apply(this, arguments);\n}\nfunction _selectOptions() {\n  _selectOptions = _asyncToGenerator(function* (select, values) {\n    return selectOptionsBase.call(this, true, select, values);\n  });\n  return _selectOptions.apply(this, arguments);\n}\nfunction deselectOptions(_x3, _x4) {\n  return _deselectOptions.apply(this, arguments);\n}\nfunction _deselectOptions() {\n  _deselectOptions = _asyncToGenerator(function* (select, values) {\n    return selectOptionsBase.call(this, false, select, values);\n  });\n  return _deselectOptions.apply(this, arguments);\n}\nfunction selectOptionsBase(_x5, _x6, _x7) {\n  return _selectOptionsBase.apply(this, arguments);\n}\nfunction _selectOptionsBase() {\n  _selectOptionsBase = _asyncToGenerator(function* (newValue, select, values) {\n    if (!newValue && !select.multiple) {\n      throw getConfig().getElementError(`Unable to deselect an option in a non-multiple select. Use selectOptions to change the selection instead.`, select);\n    }\n    const valArray = Array.isArray(values) ? values : [values];\n    const allOptions = Array.from(select.querySelectorAll('option, [role=\"option\"]'));\n    const selectedOptions = valArray.map(val => {\n      if (typeof val !== 'string' && allOptions.includes(val)) {\n        return val;\n      } else {\n        const matchingOption = allOptions.find(o => o.value === val || o.innerHTML === val);\n        if (matchingOption) {\n          return matchingOption;\n        } else {\n          throw getConfig().getElementError(`Value \"${String(val)}\" not found in options`, select);\n        }\n      }\n    }).filter(option => !isDisabled(option));\n    if (isDisabled(select) || !selectedOptions.length) return;\n    const selectOption = option => {\n      option.selected = newValue;\n      this.dispatchUIEvent(select, 'input', {\n        bubbles: true,\n        cancelable: false,\n        composed: true\n      });\n      this.dispatchUIEvent(select, 'change');\n    };\n    if (isElementType(select, 'select')) {\n      if (select.multiple) {\n        for (const option of selectedOptions) {\n          const withPointerEvents = this.config.pointerEventsCheck === 0 ? true : hasPointerEvents(this, option);\n          // events fired for multiple select are weird. Can't use hover...\n          if (withPointerEvents) {\n            this.dispatchUIEvent(option, 'pointerover');\n            this.dispatchUIEvent(select, 'pointerenter');\n            this.dispatchUIEvent(option, 'mouseover');\n            this.dispatchUIEvent(select, 'mouseenter');\n            this.dispatchUIEvent(option, 'pointermove');\n            this.dispatchUIEvent(option, 'mousemove');\n            this.dispatchUIEvent(option, 'pointerdown');\n            this.dispatchUIEvent(option, 'mousedown');\n          }\n          focusElement(select);\n          if (withPointerEvents) {\n            this.dispatchUIEvent(option, 'pointerup');\n            this.dispatchUIEvent(option, 'mouseup');\n          }\n          selectOption(option);\n          if (withPointerEvents) {\n            this.dispatchUIEvent(option, 'click');\n          }\n          yield wait(this.config);\n        }\n      } else if (selectedOptions.length === 1) {\n        const withPointerEvents = this.config.pointerEventsCheck === 0 ? true : hasPointerEvents(this, select);\n        // the click to open the select options\n        if (withPointerEvents) {\n          yield this.click(select);\n        } else {\n          focusElement(select);\n        }\n        selectOption(selectedOptions[0]);\n        if (withPointerEvents) {\n          // the browser triggers another click event on the select for the click on the option\n          // this second click has no 'down' phase\n          this.dispatchUIEvent(select, 'pointerover');\n          this.dispatchUIEvent(select, 'pointerenter');\n          this.dispatchUIEvent(select, 'mouseover');\n          this.dispatchUIEvent(select, 'mouseenter');\n          this.dispatchUIEvent(select, 'pointerup');\n          this.dispatchUIEvent(select, 'mouseup');\n          this.dispatchUIEvent(select, 'click');\n        }\n        yield wait(this.config);\n      } else {\n        throw getConfig().getElementError(`Cannot select multiple options on a non-multiple select`, select);\n      }\n    } else if (select.getAttribute('role') === 'listbox') {\n      for (const option of selectedOptions) {\n        yield this.click(option);\n        yield this.unhover(option);\n      }\n    } else {\n      throw getConfig().getElementError(`Cannot select options on elements that are neither select nor listbox elements`, select);\n    }\n  });\n  return _selectOptionsBase.apply(this, arguments);\n}\nexport { deselectOptions, selectOptions };","map":{"version":3,"names":["named","isElementType","isDisabled","wait","hasPointerEvents","focusElement","getConfig","selectOptions","_x","_x2","_selectOptions","apply","arguments","_asyncToGenerator","select","values","selectOptionsBase","call","deselectOptions","_x3","_x4","_deselectOptions","_x5","_x6","_x7","_selectOptionsBase","newValue","multiple","getElementError","valArray","Array","isArray","allOptions","from","querySelectorAll","selectedOptions","map","val","includes","matchingOption","find","o","value","innerHTML","String","filter","option","length","selectOption","selected","dispatchUIEvent","bubbles","cancelable","composed","withPointerEvents","config","pointerEventsCheck","click","getAttribute","unhover"],"sources":["C:/Users/drevo/Documents/GitHub/Crafts/TypeScript/Wordle/node_modules/@testing-library/user-event/dist/esm/utility/selectOptions.js"],"sourcesContent":["import * as named from '@testing-library/dom';\nimport '../utils/click/isClickableInput.js';\nimport '../utils/dataTransfer/Clipboard.js';\nimport '../utils/edit/isEditable.js';\nimport '../utils/edit/maxLength.js';\nimport { isElementType } from '../utils/misc/isElementType.js';\nimport { isDisabled } from '../utils/misc/isDisabled.js';\nimport '@testing-library/dom/dist/helpers.js';\nimport '../utils/keyDef/readNextDescriptor.js';\nimport '../utils/misc/level.js';\nimport { wait } from '../utils/misc/wait.js';\nimport { hasPointerEvents } from '../utils/pointer/cssPointerEvents.js';\nimport '../event/behavior/click.js';\nimport '../event/behavior/cut.js';\nimport '../event/behavior/keydown.js';\nimport '../event/behavior/keypress.js';\nimport '../event/behavior/keyup.js';\nimport '../event/behavior/paste.js';\nimport '../event/eventMap.js';\nimport { focusElement } from '../event/focus.js';\n\nconst { getConfig } = named;\nasync function selectOptions(select, values) {\n    return selectOptionsBase.call(this, true, select, values);\n}\nasync function deselectOptions(select, values) {\n    return selectOptionsBase.call(this, false, select, values);\n}\nasync function selectOptionsBase(newValue, select, values) {\n    if (!newValue && !select.multiple) {\n        throw getConfig().getElementError(`Unable to deselect an option in a non-multiple select. Use selectOptions to change the selection instead.`, select);\n    }\n    const valArray = Array.isArray(values) ? values : [\n        values\n    ];\n    const allOptions = Array.from(select.querySelectorAll('option, [role=\"option\"]'));\n    const selectedOptions = valArray.map((val)=>{\n        if (typeof val !== 'string' && allOptions.includes(val)) {\n            return val;\n        } else {\n            const matchingOption = allOptions.find((o)=>o.value === val || o.innerHTML === val);\n            if (matchingOption) {\n                return matchingOption;\n            } else {\n                throw getConfig().getElementError(`Value \"${String(val)}\" not found in options`, select);\n            }\n        }\n    }).filter((option)=>!isDisabled(option));\n    if (isDisabled(select) || !selectedOptions.length) return;\n    const selectOption = (option)=>{\n        option.selected = newValue;\n        this.dispatchUIEvent(select, 'input', {\n            bubbles: true,\n            cancelable: false,\n            composed: true\n        });\n        this.dispatchUIEvent(select, 'change');\n    };\n    if (isElementType(select, 'select')) {\n        if (select.multiple) {\n            for (const option of selectedOptions){\n                const withPointerEvents = this.config.pointerEventsCheck === 0 ? true : hasPointerEvents(this, option);\n                // events fired for multiple select are weird. Can't use hover...\n                if (withPointerEvents) {\n                    this.dispatchUIEvent(option, 'pointerover');\n                    this.dispatchUIEvent(select, 'pointerenter');\n                    this.dispatchUIEvent(option, 'mouseover');\n                    this.dispatchUIEvent(select, 'mouseenter');\n                    this.dispatchUIEvent(option, 'pointermove');\n                    this.dispatchUIEvent(option, 'mousemove');\n                    this.dispatchUIEvent(option, 'pointerdown');\n                    this.dispatchUIEvent(option, 'mousedown');\n                }\n                focusElement(select);\n                if (withPointerEvents) {\n                    this.dispatchUIEvent(option, 'pointerup');\n                    this.dispatchUIEvent(option, 'mouseup');\n                }\n                selectOption(option);\n                if (withPointerEvents) {\n                    this.dispatchUIEvent(option, 'click');\n                }\n                await wait(this.config);\n            }\n        } else if (selectedOptions.length === 1) {\n            const withPointerEvents = this.config.pointerEventsCheck === 0 ? true : hasPointerEvents(this, select);\n            // the click to open the select options\n            if (withPointerEvents) {\n                await this.click(select);\n            } else {\n                focusElement(select);\n            }\n            selectOption(selectedOptions[0]);\n            if (withPointerEvents) {\n                // the browser triggers another click event on the select for the click on the option\n                // this second click has no 'down' phase\n                this.dispatchUIEvent(select, 'pointerover');\n                this.dispatchUIEvent(select, 'pointerenter');\n                this.dispatchUIEvent(select, 'mouseover');\n                this.dispatchUIEvent(select, 'mouseenter');\n                this.dispatchUIEvent(select, 'pointerup');\n                this.dispatchUIEvent(select, 'mouseup');\n                this.dispatchUIEvent(select, 'click');\n            }\n            await wait(this.config);\n        } else {\n            throw getConfig().getElementError(`Cannot select multiple options on a non-multiple select`, select);\n        }\n    } else if (select.getAttribute('role') === 'listbox') {\n        for (const option of selectedOptions){\n            await this.click(option);\n            await this.unhover(option);\n        }\n    } else {\n        throw getConfig().getElementError(`Cannot select options on elements that are neither select nor listbox elements`, select);\n    }\n}\n\nexport { deselectOptions, selectOptions };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}