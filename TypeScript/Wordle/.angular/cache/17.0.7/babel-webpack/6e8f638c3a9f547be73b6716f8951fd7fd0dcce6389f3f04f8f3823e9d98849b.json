{"ast":null,"code":"import { setUISelection } from '../../document/UI.js';\nimport '../../utils/click/isClickableInput.js';\nimport '../../utils/dataTransfer/Clipboard.js';\nimport '../../utils/edit/isEditable.js';\nimport '../../utils/edit/maxLength.js';\nimport '@testing-library/dom/dist/helpers.js';\nimport '../../utils/keyDef/readNextDescriptor.js';\nimport '../../utils/misc/level.js';\nimport '../../options.js';\nimport { resolveCaretPosition } from './resolveCaretPosition.js';\nfunction modifySelectionPerMouseMove(selectionRange, {\n  document,\n  target,\n  node,\n  offset\n}) {\n  const selectionFocus = resolveCaretPosition({\n    target,\n    node,\n    offset\n  });\n  if ('node' in selectionRange) {\n    // When the mouse is dragged outside of an input/textarea,\n    // the selection is extended to the beginning or end of the input\n    // depending on pointer position.\n    // TODO: extend selection according to pointer position\n    /* istanbul ignore else */\n    if (selectionFocus.node === selectionRange.node) {\n      const anchorOffset = selectionFocus.offset < selectionRange.start ? selectionRange.end : selectionRange.start;\n      const focusOffset = selectionFocus.offset > selectionRange.end || selectionFocus.offset < selectionRange.start ? selectionFocus.offset : selectionRange.end;\n      setUISelection(selectionRange.node, {\n        anchorOffset,\n        focusOffset\n      });\n    }\n  } else {\n    const range = selectionRange.cloneRange();\n    const cmp = range.comparePoint(selectionFocus.node, selectionFocus.offset);\n    if (cmp < 0) {\n      range.setStart(selectionFocus.node, selectionFocus.offset);\n    } else if (cmp > 0) {\n      range.setEnd(selectionFocus.node, selectionFocus.offset);\n    }\n    const selection = document.getSelection();\n    selection === null || selection === void 0 ? void 0 : selection.removeAllRanges();\n    selection === null || selection === void 0 ? void 0 : selection.addRange(range.cloneRange());\n  }\n}\nexport { modifySelectionPerMouseMove };","map":{"version":3,"names":["setUISelection","resolveCaretPosition","modifySelectionPerMouseMove","selectionRange","document","target","node","offset","selectionFocus","anchorOffset","start","end","focusOffset","range","cloneRange","cmp","comparePoint","setStart","setEnd","selection","getSelection","removeAllRanges","addRange"],"sources":["C:/Users/drevo/Documents/GitHub/Crafts/TypeScript/Storybook/node_modules/@testing-library/user-event/dist/esm/event/selection/modifySelectionPerMouse.js"],"sourcesContent":["import { setUISelection } from '../../document/UI.js';\nimport '../../utils/click/isClickableInput.js';\nimport '../../utils/dataTransfer/Clipboard.js';\nimport '../../utils/edit/isEditable.js';\nimport '../../utils/edit/maxLength.js';\nimport '@testing-library/dom/dist/helpers.js';\nimport '../../utils/keyDef/readNextDescriptor.js';\nimport '../../utils/misc/level.js';\nimport '../../options.js';\nimport { resolveCaretPosition } from './resolveCaretPosition.js';\n\nfunction modifySelectionPerMouseMove(selectionRange, { document, target, node, offset }) {\n    const selectionFocus = resolveCaretPosition({\n        target,\n        node,\n        offset\n    });\n    if ('node' in selectionRange) {\n        // When the mouse is dragged outside of an input/textarea,\n        // the selection is extended to the beginning or end of the input\n        // depending on pointer position.\n        // TODO: extend selection according to pointer position\n        /* istanbul ignore else */ if (selectionFocus.node === selectionRange.node) {\n            const anchorOffset = selectionFocus.offset < selectionRange.start ? selectionRange.end : selectionRange.start;\n            const focusOffset = selectionFocus.offset > selectionRange.end || selectionFocus.offset < selectionRange.start ? selectionFocus.offset : selectionRange.end;\n            setUISelection(selectionRange.node, {\n                anchorOffset,\n                focusOffset\n            });\n        }\n    } else {\n        const range = selectionRange.cloneRange();\n        const cmp = range.comparePoint(selectionFocus.node, selectionFocus.offset);\n        if (cmp < 0) {\n            range.setStart(selectionFocus.node, selectionFocus.offset);\n        } else if (cmp > 0) {\n            range.setEnd(selectionFocus.node, selectionFocus.offset);\n        }\n        const selection = document.getSelection();\n        selection === null || selection === void 0 ? void 0 : selection.removeAllRanges();\n        selection === null || selection === void 0 ? void 0 : selection.addRange(range.cloneRange());\n    }\n}\n\nexport { modifySelectionPerMouseMove };\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,sBAAsB;AACrD,OAAO,uCAAuC;AAC9C,OAAO,uCAAuC;AAC9C,OAAO,gCAAgC;AACvC,OAAO,+BAA+B;AACtC,OAAO,sCAAsC;AAC7C,OAAO,0CAA0C;AACjD,OAAO,2BAA2B;AAClC,OAAO,kBAAkB;AACzB,SAASC,oBAAoB,QAAQ,2BAA2B;AAEhE,SAASC,2BAA2BA,CAACC,cAAc,EAAE;EAAEC,QAAQ;EAAEC,MAAM;EAAEC,IAAI;EAAEC;AAAO,CAAC,EAAE;EACrF,MAAMC,cAAc,GAAGP,oBAAoB,CAAC;IACxCI,MAAM;IACNC,IAAI;IACJC;EACJ,CAAC,CAAC;EACF,IAAI,MAAM,IAAIJ,cAAc,EAAE;IAC1B;IACA;IACA;IACA;IACA;IAA2B,IAAIK,cAAc,CAACF,IAAI,KAAKH,cAAc,CAACG,IAAI,EAAE;MACxE,MAAMG,YAAY,GAAGD,cAAc,CAACD,MAAM,GAAGJ,cAAc,CAACO,KAAK,GAAGP,cAAc,CAACQ,GAAG,GAAGR,cAAc,CAACO,KAAK;MAC7G,MAAME,WAAW,GAAGJ,cAAc,CAACD,MAAM,GAAGJ,cAAc,CAACQ,GAAG,IAAIH,cAAc,CAACD,MAAM,GAAGJ,cAAc,CAACO,KAAK,GAAGF,cAAc,CAACD,MAAM,GAAGJ,cAAc,CAACQ,GAAG;MAC3JX,cAAc,CAACG,cAAc,CAACG,IAAI,EAAE;QAChCG,YAAY;QACZG;MACJ,CAAC,CAAC;IACN;EACJ,CAAC,MAAM;IACH,MAAMC,KAAK,GAAGV,cAAc,CAACW,UAAU,CAAC,CAAC;IACzC,MAAMC,GAAG,GAAGF,KAAK,CAACG,YAAY,CAACR,cAAc,CAACF,IAAI,EAAEE,cAAc,CAACD,MAAM,CAAC;IAC1E,IAAIQ,GAAG,GAAG,CAAC,EAAE;MACTF,KAAK,CAACI,QAAQ,CAACT,cAAc,CAACF,IAAI,EAAEE,cAAc,CAACD,MAAM,CAAC;IAC9D,CAAC,MAAM,IAAIQ,GAAG,GAAG,CAAC,EAAE;MAChBF,KAAK,CAACK,MAAM,CAACV,cAAc,CAACF,IAAI,EAAEE,cAAc,CAACD,MAAM,CAAC;IAC5D;IACA,MAAMY,SAAS,GAAGf,QAAQ,CAACgB,YAAY,CAAC,CAAC;IACzCD,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,SAAS,CAACE,eAAe,CAAC,CAAC;IACjFF,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,SAAS,CAACG,QAAQ,CAACT,KAAK,CAACC,UAAU,CAAC,CAAC,CAAC;EAChG;AACJ;AAEA,SAASZ,2BAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}