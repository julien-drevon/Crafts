{"ast":null,"code":"import '../utils/click/isClickableInput.js';\nimport { createDataTransfer } from '../utils/dataTransfer/DataTransfer.js';\nimport '../utils/dataTransfer/Clipboard.js';\nimport '../utils/edit/isEditable.js';\nimport '../utils/edit/maxLength.js';\nimport { getWindow } from '../utils/misc/getWindow.js';\nimport { hasOwnSelection } from '../utils/focus/selection.js';\nimport '../utils/keyDef/readNextDescriptor.js';\nimport '../utils/misc/level.js';\nimport '../options.js';\nimport { getUISelection, getUIValue } from './UI.js';\nfunction copySelection(target) {\n  const data = hasOwnSelection(target) ? {\n    'text/plain': readSelectedValueFromInput(target)\n  } : {\n    'text/plain': String(target.ownerDocument.getSelection())\n  };\n  const dt = createDataTransfer(getWindow(target));\n  for (const type in data) {\n    if (data[type]) {\n      dt.setData(type, data[type]);\n    }\n  }\n  return dt;\n}\nfunction readSelectedValueFromInput(target) {\n  const sel = getUISelection(target);\n  const val = getUIValue(target);\n  return val.substring(sel.startOffset, sel.endOffset);\n}\nexport { copySelection };","map":{"version":3,"names":["createDataTransfer","getWindow","hasOwnSelection","getUISelection","getUIValue","copySelection","target","data","readSelectedValueFromInput","String","ownerDocument","getSelection","dt","type","setData","sel","val","substring","startOffset","endOffset"],"sources":["C:/Users/drevo/Documents/GitHub/Crafts/TypeScript/Wordle/node_modules/@testing-library/user-event/dist/esm/document/copySelection.js"],"sourcesContent":["import '../utils/click/isClickableInput.js';\nimport { createDataTransfer } from '../utils/dataTransfer/DataTransfer.js';\nimport '../utils/dataTransfer/Clipboard.js';\nimport '../utils/edit/isEditable.js';\nimport '../utils/edit/maxLength.js';\nimport { getWindow } from '../utils/misc/getWindow.js';\nimport { hasOwnSelection } from '../utils/focus/selection.js';\nimport '../utils/keyDef/readNextDescriptor.js';\nimport '../utils/misc/level.js';\nimport '../options.js';\nimport { getUISelection, getUIValue } from './UI.js';\n\nfunction copySelection(target) {\n    const data = hasOwnSelection(target) ? {\n        'text/plain': readSelectedValueFromInput(target)\n    } : {\n        'text/plain': String(target.ownerDocument.getSelection())\n    };\n    const dt = createDataTransfer(getWindow(target));\n    for(const type in data){\n        if (data[type]) {\n            dt.setData(type, data[type]);\n        }\n    }\n    return dt;\n}\nfunction readSelectedValueFromInput(target) {\n    const sel = getUISelection(target);\n    const val = getUIValue(target);\n    return val.substring(sel.startOffset, sel.endOffset);\n}\n\nexport { copySelection };\n"],"mappings":"AAAA,OAAO,oCAAoC;AAC3C,SAASA,kBAAkB,QAAQ,uCAAuC;AAC1E,OAAO,oCAAoC;AAC3C,OAAO,6BAA6B;AACpC,OAAO,4BAA4B;AACnC,SAASC,SAAS,QAAQ,4BAA4B;AACtD,SAASC,eAAe,QAAQ,6BAA6B;AAC7D,OAAO,uCAAuC;AAC9C,OAAO,wBAAwB;AAC/B,OAAO,eAAe;AACtB,SAASC,cAAc,EAAEC,UAAU,QAAQ,SAAS;AAEpD,SAASC,aAAaA,CAACC,MAAM,EAAE;EAC3B,MAAMC,IAAI,GAAGL,eAAe,CAACI,MAAM,CAAC,GAAG;IACnC,YAAY,EAAEE,0BAA0B,CAACF,MAAM;EACnD,CAAC,GAAG;IACA,YAAY,EAAEG,MAAM,CAACH,MAAM,CAACI,aAAa,CAACC,YAAY,CAAC,CAAC;EAC5D,CAAC;EACD,MAAMC,EAAE,GAAGZ,kBAAkB,CAACC,SAAS,CAACK,MAAM,CAAC,CAAC;EAChD,KAAI,MAAMO,IAAI,IAAIN,IAAI,EAAC;IACnB,IAAIA,IAAI,CAACM,IAAI,CAAC,EAAE;MACZD,EAAE,CAACE,OAAO,CAACD,IAAI,EAAEN,IAAI,CAACM,IAAI,CAAC,CAAC;IAChC;EACJ;EACA,OAAOD,EAAE;AACb;AACA,SAASJ,0BAA0BA,CAACF,MAAM,EAAE;EACxC,MAAMS,GAAG,GAAGZ,cAAc,CAACG,MAAM,CAAC;EAClC,MAAMU,GAAG,GAAGZ,UAAU,CAACE,MAAM,CAAC;EAC9B,OAAOU,GAAG,CAACC,SAAS,CAACF,GAAG,CAACG,WAAW,EAAEH,GAAG,CAACI,SAAS,CAAC;AACxD;AAEA,SAASd,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}