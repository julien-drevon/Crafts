{"ast":null,"code":"import '../../utils/click/isClickableInput.js';\nimport '../../utils/dataTransfer/Clipboard.js';\nimport '../../utils/edit/isEditable.js';\nimport '../../utils/edit/maxLength.js';\nimport { isElementType } from '../../utils/misc/isElementType.js';\nimport { getWindow } from '../../utils/misc/getWindow.js';\nimport { isFocusable } from '../../utils/focus/isFocusable.js';\nimport '../../utils/keyDef/readNextDescriptor.js';\nimport { cloneEvent } from '../../utils/misc/cloneEvent.js';\nimport '../../utils/misc/level.js';\nimport '../../options.js';\nimport { focusElement, blurElement } from '../focus.js';\nimport { behavior } from './registry.js';\nbehavior.click = (event, target, instance) => {\n  const context = target.closest('button,input,label,select,textarea');\n  const control = context && isElementType(context, 'label') && context.control;\n  if (control) {\n    return () => {\n      if (isFocusable(control)) {\n        focusElement(control);\n      }\n      instance.dispatchEvent(control, cloneEvent(event));\n    };\n  } else if (isElementType(target, 'input', {\n    type: 'file'\n  })) {\n    return () => {\n      // blur fires when the file selector pops up\n      blurElement(target);\n      target.dispatchEvent(new (getWindow(target).Event)('fileDialog'));\n      // focus fires after the file selector has been closed\n      focusElement(target);\n    };\n  }\n};","map":{"version":3,"names":["isElementType","getWindow","isFocusable","cloneEvent","focusElement","blurElement","behavior","click","event","target","instance","context","closest","control","dispatchEvent","type","Event"],"sources":["C:/Users/drevo/Documents/GitHub/Crafts/TypeScript/Wordle/node_modules/@testing-library/user-event/dist/esm/event/behavior/click.js"],"sourcesContent":["import '../../utils/click/isClickableInput.js';\nimport '../../utils/dataTransfer/Clipboard.js';\nimport '../../utils/edit/isEditable.js';\nimport '../../utils/edit/maxLength.js';\nimport { isElementType } from '../../utils/misc/isElementType.js';\nimport { getWindow } from '../../utils/misc/getWindow.js';\nimport { isFocusable } from '../../utils/focus/isFocusable.js';\nimport '../../utils/keyDef/readNextDescriptor.js';\nimport { cloneEvent } from '../../utils/misc/cloneEvent.js';\nimport '../../utils/misc/level.js';\nimport '../../options.js';\nimport { focusElement, blurElement } from '../focus.js';\nimport { behavior } from './registry.js';\n\nbehavior.click = (event, target, instance)=>{\n    const context = target.closest('button,input,label,select,textarea');\n    const control = context && isElementType(context, 'label') && context.control;\n    if (control) {\n        return ()=>{\n            if (isFocusable(control)) {\n                focusElement(control);\n            }\n            instance.dispatchEvent(control, cloneEvent(event));\n        };\n    } else if (isElementType(target, 'input', {\n        type: 'file'\n    })) {\n        return ()=>{\n            // blur fires when the file selector pops up\n            blurElement(target);\n            target.dispatchEvent(new (getWindow(target)).Event('fileDialog'));\n            // focus fires after the file selector has been closed\n            focusElement(target);\n        };\n    }\n};\n"],"mappings":"AAAA,OAAO,uCAAuC;AAC9C,OAAO,uCAAuC;AAC9C,OAAO,gCAAgC;AACvC,OAAO,+BAA+B;AACtC,SAASA,aAAa,QAAQ,mCAAmC;AACjE,SAASC,SAAS,QAAQ,+BAA+B;AACzD,SAASC,WAAW,QAAQ,kCAAkC;AAC9D,OAAO,0CAA0C;AACjD,SAASC,UAAU,QAAQ,gCAAgC;AAC3D,OAAO,2BAA2B;AAClC,OAAO,kBAAkB;AACzB,SAASC,YAAY,EAAEC,WAAW,QAAQ,aAAa;AACvD,SAASC,QAAQ,QAAQ,eAAe;AAExCA,QAAQ,CAACC,KAAK,GAAG,CAACC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,KAAG;EACxC,MAAMC,OAAO,GAAGF,MAAM,CAACG,OAAO,CAAC,oCAAoC,CAAC;EACpE,MAAMC,OAAO,GAAGF,OAAO,IAAIX,aAAa,CAACW,OAAO,EAAE,OAAO,CAAC,IAAIA,OAAO,CAACE,OAAO;EAC7E,IAAIA,OAAO,EAAE;IACT,OAAO,MAAI;MACP,IAAIX,WAAW,CAACW,OAAO,CAAC,EAAE;QACtBT,YAAY,CAACS,OAAO,CAAC;MACzB;MACAH,QAAQ,CAACI,aAAa,CAACD,OAAO,EAAEV,UAAU,CAACK,KAAK,CAAC,CAAC;IACtD,CAAC;EACL,CAAC,MAAM,IAAIR,aAAa,CAACS,MAAM,EAAE,OAAO,EAAE;IACtCM,IAAI,EAAE;EACV,CAAC,CAAC,EAAE;IACA,OAAO,MAAI;MACP;MACAV,WAAW,CAACI,MAAM,CAAC;MACnBA,MAAM,CAACK,aAAa,CAAC,KAAKb,SAAS,CAACQ,MAAM,CAAC,CAAEO,KAAK,EAAC,YAAY,CAAC,CAAC;MACjE;MACAZ,YAAY,CAACK,MAAM,CAAC;IACxB,CAAC;EACL;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}