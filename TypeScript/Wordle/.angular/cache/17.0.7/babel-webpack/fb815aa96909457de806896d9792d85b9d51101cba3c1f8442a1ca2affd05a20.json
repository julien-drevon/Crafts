{"ast":null,"code":"import { isElementType } from '../misc/isElementType.js';\nimport { isContentEditable } from './isContentEditable.js';\nfunction isEditable(element) {\n  return isEditableInputOrTextArea(element) && !element.readOnly || isContentEditable(element);\n}\nvar editableInputTypes;\n(function (editableInputTypes) {\n  editableInputTypes['text'] = 'text';\n  editableInputTypes['date'] = 'date';\n  editableInputTypes['datetime-local'] = 'datetime-local';\n  editableInputTypes['email'] = 'email';\n  editableInputTypes['month'] = 'month';\n  editableInputTypes['number'] = 'number';\n  editableInputTypes['password'] = 'password';\n  editableInputTypes['search'] = 'search';\n  editableInputTypes['tel'] = 'tel';\n  editableInputTypes['time'] = 'time';\n  editableInputTypes['url'] = 'url';\n  editableInputTypes['week'] = 'week';\n})(editableInputTypes || (editableInputTypes = {}));\nfunction isEditableInputOrTextArea(element) {\n  return isElementType(element, 'textarea') || isElementType(element, 'input') && element.type in editableInputTypes;\n}\nexport { isEditable, isEditableInputOrTextArea };","map":{"version":3,"names":["isElementType","isContentEditable","isEditable","element","isEditableInputOrTextArea","readOnly","editableInputTypes","type"],"sources":["C:/Users/drevo/Documents/GitHub/Crafts/TypeScript/Wordle/node_modules/@testing-library/user-event/dist/esm/utils/edit/isEditable.js"],"sourcesContent":["import { isElementType } from '../misc/isElementType.js';\nimport { isContentEditable } from './isContentEditable.js';\n\nfunction isEditable(element) {\n    return isEditableInputOrTextArea(element) && !element.readOnly || isContentEditable(element);\n}\nvar editableInputTypes;\n(function(editableInputTypes) {\n    editableInputTypes['text'] = 'text';\n    editableInputTypes['date'] = 'date';\n    editableInputTypes['datetime-local'] = 'datetime-local';\n    editableInputTypes['email'] = 'email';\n    editableInputTypes['month'] = 'month';\n    editableInputTypes['number'] = 'number';\n    editableInputTypes['password'] = 'password';\n    editableInputTypes['search'] = 'search';\n    editableInputTypes['tel'] = 'tel';\n    editableInputTypes['time'] = 'time';\n    editableInputTypes['url'] = 'url';\n    editableInputTypes['week'] = 'week';\n})(editableInputTypes || (editableInputTypes = {}));\nfunction isEditableInputOrTextArea(element) {\n    return isElementType(element, 'textarea') || isElementType(element, 'input') && element.type in editableInputTypes;\n}\n\nexport { isEditable, isEditableInputOrTextArea };\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,0BAA0B;AACxD,SAASC,iBAAiB,QAAQ,wBAAwB;AAE1D,SAASC,UAAUA,CAACC,OAAO,EAAE;EACzB,OAAOC,yBAAyB,CAACD,OAAO,CAAC,IAAI,CAACA,OAAO,CAACE,QAAQ,IAAIJ,iBAAiB,CAACE,OAAO,CAAC;AAChG;AACA,IAAIG,kBAAkB;AACtB,CAAC,UAASA,kBAAkB,EAAE;EAC1BA,kBAAkB,CAAC,MAAM,CAAC,GAAG,MAAM;EACnCA,kBAAkB,CAAC,MAAM,CAAC,GAAG,MAAM;EACnCA,kBAAkB,CAAC,gBAAgB,CAAC,GAAG,gBAAgB;EACvDA,kBAAkB,CAAC,OAAO,CAAC,GAAG,OAAO;EACrCA,kBAAkB,CAAC,OAAO,CAAC,GAAG,OAAO;EACrCA,kBAAkB,CAAC,QAAQ,CAAC,GAAG,QAAQ;EACvCA,kBAAkB,CAAC,UAAU,CAAC,GAAG,UAAU;EAC3CA,kBAAkB,CAAC,QAAQ,CAAC,GAAG,QAAQ;EACvCA,kBAAkB,CAAC,KAAK,CAAC,GAAG,KAAK;EACjCA,kBAAkB,CAAC,MAAM,CAAC,GAAG,MAAM;EACnCA,kBAAkB,CAAC,KAAK,CAAC,GAAG,KAAK;EACjCA,kBAAkB,CAAC,MAAM,CAAC,GAAG,MAAM;AACvC,CAAC,EAAEA,kBAAkB,KAAKA,kBAAkB,GAAG,CAAC,CAAC,CAAC,CAAC;AACnD,SAASF,yBAAyBA,CAACD,OAAO,EAAE;EACxC,OAAOH,aAAa,CAACG,OAAO,EAAE,UAAU,CAAC,IAAIH,aAAa,CAACG,OAAO,EAAE,OAAO,CAAC,IAAIA,OAAO,CAACI,IAAI,IAAID,kBAAkB;AACtH;AAEA,SAASJ,UAAU,EAAEE,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}