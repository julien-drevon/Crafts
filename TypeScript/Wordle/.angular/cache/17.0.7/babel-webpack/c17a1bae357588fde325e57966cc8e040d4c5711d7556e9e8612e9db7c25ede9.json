{"ast":null,"code":"import '../../utils/click/isClickableInput.js';\nimport '../../utils/dataTransfer/Clipboard.js';\nimport { isContentEditable } from '../../utils/edit/isContentEditable.js';\nimport { isEditable } from '../../utils/edit/isEditable.js';\nimport '../../utils/edit/maxLength.js';\nimport { isElementType } from '../../utils/misc/isElementType.js';\nimport '@testing-library/dom/dist/helpers.js';\nimport '../../utils/keyDef/readNextDescriptor.js';\nimport '../../utils/misc/level.js';\nimport '../../options.js';\nimport { input } from '../input.js';\nimport { behavior } from './registry.js';\nbehavior.keypress = (event, target, instance) => {\n  if (event.key === 'Enter') {\n    if (isElementType(target, 'button') || isElementType(target, 'input') && ClickInputOnEnter.includes(target.type) || isElementType(target, 'a') && Boolean(target.href)) {\n      return () => {\n        instance.dispatchUIEvent(target, 'click');\n      };\n    } else if (isElementType(target, 'input')) {\n      const form = target.form;\n      const submit = form === null || form === void 0 ? void 0 : form.querySelector('input[type=\"submit\"], button:not([type]), button[type=\"submit\"]');\n      if (submit) {\n        return () => instance.dispatchUIEvent(submit, 'click');\n      } else if (form && SubmitSingleInputOnEnter.includes(target.type) && form.querySelectorAll('input').length === 1) {\n        return () => instance.dispatchUIEvent(form, 'submit');\n      } else {\n        return;\n      }\n    }\n  }\n  if (isEditable(target)) {\n    const inputType = event.key === 'Enter' ? isContentEditable(target) && !instance.system.keyboard.modifiers.Shift ? 'insertParagraph' : 'insertLineBreak' : 'insertText';\n    const inputData = event.key === 'Enter' ? '\\n' : event.key;\n    return () => input(instance, target, inputData, inputType);\n  }\n};\nconst ClickInputOnEnter = ['button', 'color', 'file', 'image', 'reset', 'submit'];\nconst SubmitSingleInputOnEnter = ['email', 'month', 'password', 'search', 'tel', 'text', 'url', 'week'];","map":{"version":3,"names":["isContentEditable","isEditable","isElementType","input","behavior","keypress","event","target","instance","key","ClickInputOnEnter","includes","type","Boolean","href","dispatchUIEvent","form","submit","querySelector","SubmitSingleInputOnEnter","querySelectorAll","length","inputType","system","keyboard","modifiers","Shift","inputData"],"sources":["C:/Users/drevo/Documents/GitHub/Crafts/TypeScript/Wordle/node_modules/@testing-library/user-event/dist/esm/event/behavior/keypress.js"],"sourcesContent":["import '../../utils/click/isClickableInput.js';\nimport '../../utils/dataTransfer/Clipboard.js';\nimport { isContentEditable } from '../../utils/edit/isContentEditable.js';\nimport { isEditable } from '../../utils/edit/isEditable.js';\nimport '../../utils/edit/maxLength.js';\nimport { isElementType } from '../../utils/misc/isElementType.js';\nimport '@testing-library/dom/dist/helpers.js';\nimport '../../utils/keyDef/readNextDescriptor.js';\nimport '../../utils/misc/level.js';\nimport '../../options.js';\nimport { input } from '../input.js';\nimport { behavior } from './registry.js';\n\nbehavior.keypress = (event, target, instance)=>{\n    if (event.key === 'Enter') {\n        if (isElementType(target, 'button') || isElementType(target, 'input') && ClickInputOnEnter.includes(target.type) || isElementType(target, 'a') && Boolean(target.href)) {\n            return ()=>{\n                instance.dispatchUIEvent(target, 'click');\n            };\n        } else if (isElementType(target, 'input')) {\n            const form = target.form;\n            const submit = form === null || form === void 0 ? void 0 : form.querySelector('input[type=\"submit\"], button:not([type]), button[type=\"submit\"]');\n            if (submit) {\n                return ()=>instance.dispatchUIEvent(submit, 'click');\n            } else if (form && SubmitSingleInputOnEnter.includes(target.type) && form.querySelectorAll('input').length === 1) {\n                return ()=>instance.dispatchUIEvent(form, 'submit');\n            } else {\n                return;\n            }\n        }\n    }\n    if (isEditable(target)) {\n        const inputType = event.key === 'Enter' ? isContentEditable(target) && !instance.system.keyboard.modifiers.Shift ? 'insertParagraph' : 'insertLineBreak' : 'insertText';\n        const inputData = event.key === 'Enter' ? '\\n' : event.key;\n        return ()=>input(instance, target, inputData, inputType);\n    }\n};\nconst ClickInputOnEnter = [\n    'button',\n    'color',\n    'file',\n    'image',\n    'reset',\n    'submit'\n];\nconst SubmitSingleInputOnEnter = [\n    'email',\n    'month',\n    'password',\n    'search',\n    'tel',\n    'text',\n    'url',\n    'week'\n];\n"],"mappings":"AAAA,OAAO,uCAAuC;AAC9C,OAAO,uCAAuC;AAC9C,SAASA,iBAAiB,QAAQ,uCAAuC;AACzE,SAASC,UAAU,QAAQ,gCAAgC;AAC3D,OAAO,+BAA+B;AACtC,SAASC,aAAa,QAAQ,mCAAmC;AACjE,OAAO,sCAAsC;AAC7C,OAAO,0CAA0C;AACjD,OAAO,2BAA2B;AAClC,OAAO,kBAAkB;AACzB,SAASC,KAAK,QAAQ,aAAa;AACnC,SAASC,QAAQ,QAAQ,eAAe;AAExCA,QAAQ,CAACC,QAAQ,GAAG,CAACC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,KAAG;EAC3C,IAAIF,KAAK,CAACG,GAAG,KAAK,OAAO,EAAE;IACvB,IAAIP,aAAa,CAACK,MAAM,EAAE,QAAQ,CAAC,IAAIL,aAAa,CAACK,MAAM,EAAE,OAAO,CAAC,IAAIG,iBAAiB,CAACC,QAAQ,CAACJ,MAAM,CAACK,IAAI,CAAC,IAAIV,aAAa,CAACK,MAAM,EAAE,GAAG,CAAC,IAAIM,OAAO,CAACN,MAAM,CAACO,IAAI,CAAC,EAAE;MACpK,OAAO,MAAI;QACPN,QAAQ,CAACO,eAAe,CAACR,MAAM,EAAE,OAAO,CAAC;MAC7C,CAAC;IACL,CAAC,MAAM,IAAIL,aAAa,CAACK,MAAM,EAAE,OAAO,CAAC,EAAE;MACvC,MAAMS,IAAI,GAAGT,MAAM,CAACS,IAAI;MACxB,MAAMC,MAAM,GAAGD,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACE,aAAa,CAAC,iEAAiE,CAAC;MAChJ,IAAID,MAAM,EAAE;QACR,OAAO,MAAIT,QAAQ,CAACO,eAAe,CAACE,MAAM,EAAE,OAAO,CAAC;MACxD,CAAC,MAAM,IAAID,IAAI,IAAIG,wBAAwB,CAACR,QAAQ,CAACJ,MAAM,CAACK,IAAI,CAAC,IAAII,IAAI,CAACI,gBAAgB,CAAC,OAAO,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;QAC9G,OAAO,MAAIb,QAAQ,CAACO,eAAe,CAACC,IAAI,EAAE,QAAQ,CAAC;MACvD,CAAC,MAAM;QACH;MACJ;IACJ;EACJ;EACA,IAAIf,UAAU,CAACM,MAAM,CAAC,EAAE;IACpB,MAAMe,SAAS,GAAGhB,KAAK,CAACG,GAAG,KAAK,OAAO,GAAGT,iBAAiB,CAACO,MAAM,CAAC,IAAI,CAACC,QAAQ,CAACe,MAAM,CAACC,QAAQ,CAACC,SAAS,CAACC,KAAK,GAAG,iBAAiB,GAAG,iBAAiB,GAAG,YAAY;IACvK,MAAMC,SAAS,GAAGrB,KAAK,CAACG,GAAG,KAAK,OAAO,GAAG,IAAI,GAAGH,KAAK,CAACG,GAAG;IAC1D,OAAO,MAAIN,KAAK,CAACK,QAAQ,EAAED,MAAM,EAAEoB,SAAS,EAAEL,SAAS,CAAC;EAC5D;AACJ,CAAC;AACD,MAAMZ,iBAAiB,GAAG,CACtB,QAAQ,EACR,OAAO,EACP,MAAM,EACN,OAAO,EACP,OAAO,EACP,QAAQ,CACX;AACD,MAAMS,wBAAwB,GAAG,CAC7B,OAAO,EACP,OAAO,EACP,UAAU,EACV,QAAQ,EACR,KAAK,EACL,MAAM,EACN,KAAK,EACL,MAAM,CACT"},"metadata":{},"sourceType":"module","externalDependencies":[]}